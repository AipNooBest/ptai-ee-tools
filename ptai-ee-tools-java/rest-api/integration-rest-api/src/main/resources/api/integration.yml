openapi: 3.0.1
info:
  title: PT AI EE integration service
  description: PT AI EE integration service API documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
  - url: https://127.0.0.1:8443/
tags:
  - name: sast-controller
    description: SAST controller
security:
  - Bearer: []
paths:
  /oauth/token:
    post:
      security:
        - Basic: []
      tags:
        - oauth-controller
      summary: Generate JWT client id / secret (those are passed as a basic auth fields) and login / password or refresh-token for subsequent operations
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: User name
                  type: string
                password:
                  description: User API token
                  type: string
                refresh_token:
                  description: User JWT refresh token
                  type: string
                grant_type:
                  description: JWT token grant type
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/public/build-info:
    get:
      tags:
        - public-controller
      summary: Get API details like versions etc. May be used to resolve compatibility issues
      operationId: get-build-info
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildInfo'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/public/about:
    get:
      tags:
        - public-controller
      summary: Get basic server information
      operationId: get-about
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
  /api/diagnostic/check:
    get:
      tags:
        - diagnostic-controller
      summary: Check if backend services are healthy, i.e. to support "Check connection" button
      operationId: get-status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsStatus'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/diagnostic/project:
    get:
      tags:
        - diagnostic-controller
      summary: Get project unique ID by its name
      operationId: get-project-id
      parameters:
        - name: name
          description: PT AI EE project name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
  /api/admin/users:
    get:
      tags:
        - admin-controller
      summary: List all users
      operationId: get-users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    post:
      tags:
        - admin-controller
      summary: Create user
      operationId: post-signup
      requestBody:
        description: User creation data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserData'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
    delete:
      tags:
        - admin-controller
      summary: Delete user
      description: Delete user by his ID or name
      operationId: delete-user
      parameters:
        - name: id
          description: PT AI EE user ID
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          description: PT AI EE user name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/admin/random:
    get:
      tags:
        - admin-controller
      summary: Generate random API token
      operationId: get-random
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/result:
    get:
      tags:
        - sast-controller
      summary: Get AST artifact named ${artifact} generated by ${scanId} AST job
      operationId: get-job-result
      parameters:
        - name: scan-id
          in: query
          description: Unique AST job identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: artifact
          in: query
          description: AST artifact name to download
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/results:
    get:
      tags:
        - sast-controller
      summary: Get names of AST job artifacts for job ${scan-id}
      operationId: get-job-results
      parameters:
        - name: scan-id
          in: query
          description: Unique AST job identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/scan-json-managed:
    post:
      tags:
      - sast-controller
      summary: Start AST job. Scan settings and policy are provided using JSON. Returns unique AST job identifier
      operationId: start-json-job
      parameters:
      - name: project-name
        in: query
        description: Name of project to AST. Will be deprecated as real project name should be stored in JSON
        required: true
        deprecated: false
        schema:
          type: string
      - name: node
        in: query
        description: PT AI scan agent node name or tag
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - settings
              properties:
                settings:
                  type: string
                  description: JSON-defined AST settings
                policy:
                  type: string
                  description: JSON-defined AST policy
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/scan-ui-managed:
    post:
      tags:
        - sast-controller
      summary: Start AST job. Scan settings and policy are defined using UI. Returns unique AST job identifier
      operationId: start-ui-job
      parameters:
        - name: project-name
          in: query
          description: Name of project to AST
          required: true
          deprecated: false
          schema:
            type: string
        - name: node
          in: query
          description: PT AI scan agent node name or tag
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/stop:
    post:
      tags:
        - sast-controller
      summary: Stop current AST job (be it running or enqueued) with ${scan-id} identifier
      operationId: stop-scan
      parameters:
        - name: scan-id
          in: query
          description: Unique AST job identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/state:
    get:
      tags:
        - sast-controller
      summary: Get AST job execution state and logs
      operationId: get-scan-job-state
      parameters:
        - name: scan-id
          in: query
          description: Unique AST job identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: start-pos
          in: query
          description: start-pos
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /api/sast/upload:
    post:
      tags:
        - sast-controller
      summary: Upload zipped artifacts to be scanned to the PT AI server. Supports multipart file upload
      operationId: upload-artifacts
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - current
                - file
                - project
                - total
              properties:
                current:
                  description: Index of current multipart zip file segment
                file:
                  type: string
                  description: Zip file contents
                  format: binary
                project:
                  description: Project name
                total:
                  description: Total number of file segments to be uploaded
                uploadId:
                  description: Unique upload identifier
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
components:
  schemas:
    JwtResponse:
      title: JwtResponse
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
        scope:
          type: string
        jti:
          type: string
    BuildInfo:
      title: BuildInfo
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        date:
          type: string
    ComponentStatus:
      title: ComponentStatus
      type: string
      enum:
        - FAILURE
        - SUCCESS
    ComponentsStatus:
      title: ComponentsStatus
      type: object
      properties:
        ptai:
          $ref: '#/components/schemas/ComponentStatus'
        embedded:
          $ref: '#/components/schemas/ComponentStatus'
    JobState:
      title: JobState
      type: object
      properties:
        log:
          type: string
        pos:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - UNKNOWN
            - FAILURE
            - UNSTABLE
            - SUCCESS
            - ABORTED
    Role:
      title: Role
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          format: int64
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        name:
          type: string
    UserData:
      title: User data
      type: object
      properties:
        password:
          type: string
        roles:
          type: array
          items:
            type: string
        name:
          type: string
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please insert JWT with Bearer into field
      name: Authorization
      in: header
    Basic:
      type: http
      scheme: basic
