plugins {
    id 'io.freefair.lombok' version '6.0.0-m2' apply false
    id 'com.github.johnrengelman.shadow' version '5.2.0' apply false
    id 'org.jenkins-ci.jpi' version '0.43.0' apply false
    id 'com.palantir.git-version' version '0.12.3'
}

ext {
    buildTimestamp = "${Instant.now().toString()}"
    versionDetails = versionDetails()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.freefair.lombok'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        maven { url = uri('https://repo.jenkins-ci.org/releases/') }
    }

    dependencies {
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform() {
            excludeTags 'integration', 'integration-legacy'
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }

    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }

    jar {
        manifest.attributes['Implementation-Version'] = version
        manifest.attributes['Build-Time'] = buildTimestamp
        manifest.attributes['Implementation-Vendor-Id'] = rootGroup
        manifest.attributes['Implementation-Git-Hash'] = versionDetails.gitHash
        manifest.attributes['Implementation-Git-Hash-Full'] = versionDetails.gitHashFull
        manifest.attributes['Implementation-Git-Branch'] = versionDetails.branchName
    }

    def integrationTest = tasks.register("integrationTest", Test) {
        useJUnitPlatform {
            includeTags "integration"
        }
        testLogging {
            events "passed", "skipped", "failed"
        }
        shouldRunAfter test
    }
}

wrapper {
    gradleVersion = '6.8.3'
}
