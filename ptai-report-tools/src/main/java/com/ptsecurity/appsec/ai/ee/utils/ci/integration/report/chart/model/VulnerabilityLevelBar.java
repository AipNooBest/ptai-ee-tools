package com.ptsecurity.appsec.ai.ee.utils.ci.integration.report.chart.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.ptsecurity.appsec.ai.ee.scan.result.issue.types.BaseIssue;
import lombok.Builder;
import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Getter
@Setter
@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public class VulnerabilityLevelBar extends BaseDataModel {
    public static final Map<BaseIssue.Level, ItemStyle> ITEM_STYLE_MAP = new HashMap<>();

    public static final Map<BaseIssue.Level, ItemStyle> AREA_STYLE_MAP = new HashMap<>();

    static {
        ITEM_STYLE_MAP.put(BaseIssue.Level.HIGH, ItemStyle.builder().color("#" + Integer.toHexString(COLOR_HIGH)).build());
        ITEM_STYLE_MAP.put(BaseIssue.Level.MEDIUM, ItemStyle.builder().color("#" + Integer.toHexString(COLOR_MEDIUM)).build());
        ITEM_STYLE_MAP.put(BaseIssue.Level.LOW, ItemStyle.builder().color("#" + Integer.toHexString(COLOR_LOW)).build());
        ITEM_STYLE_MAP.put(BaseIssue.Level.POTENTIAL, ItemStyle.builder().color("#" + Integer.toHexString(COLOR_POTENTIAL)).build());
    }

    @Getter
    @Setter
    @Builder
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public static class ItemStyle {
        @JsonProperty
        protected String color;
    }

    @Getter
    @Setter
    @Builder
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public static class DataItem {
        @JsonProperty
        protected Long value;

        @JsonProperty
        protected ItemStyle itemStyle;
    }

    @Getter
    @Setter
    @Builder
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public static class Series {
        @JsonProperty
        protected String type;

        @JsonProperty
        @Builder.Default
        protected List<DataItem> data = new ArrayList<>();
    }

    @Getter
    @Setter
    @Builder
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public static class Axis {
        @JsonProperty
        protected String type;

        @JsonProperty
        @Builder.Default
        protected List<String> data = new ArrayList<>();
    }


    // ECharts's stacked area chart data model uses "xAxis" and "yAxis"
    // names. But if we simply name field "xAxis" then Lombok's generated
    // getter will be named as getXAxis. During POJOPropertiesCollector.collectAll
    // call that getter will be recognized as matching to xaxis or XAxis field
    // name (it depends on USE_STD_BEAN_NAMING mapper feature) so that field
    // will be serialized twice; as xAxis and xaxis / XAxis. So we need to
    // xplicitly set JSON property name and use neutral field name
    @Builder.Default
    @JsonProperty("xAxis")
    protected Axis xaxis = Axis.builder().type("value").build();

    @Builder.Default
    @JsonProperty("yAxis")
    protected Axis yaxis = Axis.builder()
            .type("category")
            .build();


    @JsonProperty
    @Builder.Default
    protected List<Series> series = new ArrayList<>();
}
