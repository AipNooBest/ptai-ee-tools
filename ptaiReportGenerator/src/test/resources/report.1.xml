<?xml version="1.0" encoding="UTF-8"?><report HaveGroups="false">
  <ScanInfo ScanDate="04 апреля 2019" TotalFileCount="90" ScannedFileCount="90" VulnerableFiles="19" TotalVulnerabilityCount="159" AcceptedVulnerabilities="159" DiscardedVulnerabilities="0" SuppressedVulnerabilities="0" NonFilteredVulnerabilitiesCount="705" NonFilteredSuppressedVulnerabilitiesCount="0" PolicyState="0">
      <FilterInformation>
         <IncludedFilters ConformationStatuses="Подтвержденные" FilterPath="."/>
         <ExcludedFilters SuspectedOrSecondOrder="Исключенные уязвимости" ConformationStatuses="Без статуса, Опровергнутые, Подтвержденные автоматически"/>
      </FilterInformation>
      <ScanSettings>
         <Setting DisplayName="Проект" Order="1">LDAP</Setting>
         <Setting DisplayName="Адрес сайта" Order="3" IsExternalLink="true">http://localhost</Setting>
         <Setting DisplayName="Время сканирования" Order="5">1:24:04</Setting>
         <Setting DisplayName="Версия" Order="3">3.3.0.3666</Setting>
         <Setting DisplayName="Алгоритм" Order="6">Искать от точек входа, Искать от доступных public и protected методов</Setting>
         <Setting DisplayName="Объект сканирования" Order="2">W:\TEMP\20190404\ldap-master@e8ced78316e</Setting>
         <Setting DisplayName="Язык программирования" Order="4">Java</Setting>
         <Setting DisplayName="Отключенные модули" Order="10">Blackbox-поиск</Setting>
         <Setting DisplayName="Отключенные шаблоны" Order="12">Некорректное назначение прав доступа для критичных ресурсов, Передача Cookie через HTTPS сессию без атрибута 'Secure', Раскрытие информации через Persistent Cookie, Раскрытие системной информации, Хранение пароля в незашифрованном виде</Setting>
      </ScanSettings>
  </ScanInfo>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>javax.net.SocketFactory.createSocket(java.net.InetAddress, int)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 47</Entry>
      <NumberLine>48</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>javax.net.SocketFactory.createSocket(java.net.InetAddress, int)</TrimmedFunction>
      <RawLine>Socket socket = blindFactory.createSocket(address, port);</RawLine>
      <TrimmedRawLine>Socket socket = blindFactory.createSocket(address, port);</TrimmedRawLine>
      <Place>d69f9a62f640ab81d668ee642811bc8b</Place>
      <AdditionalConditions>((address == "127.0.0.1")) &amp;&amp; ((port == "22"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((address == "127.0.0.1")) &amp;&amp; ((port == "22"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 48</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>Socket socket = blindFactory.createSocket(address, port);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>DQ9be5ZPQcIq/u/FrO2pSbKzoR4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</PrimaryFile>
      <Type DisplayName="Подделка запроса сервера" Id="Server-Side Request Forgery" GroupId="Подделка запроса сервераlevel-high">Server-Side Request Forgery</Type>
      <Counter>690</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="48">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">address</CodeLinePart>
               <CodeLinePart PartType="Code">, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="49">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="47">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Socket createSocket(InetAddress address, int port) throws IOException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(address, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="49">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="47">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">address</CodeLinePart>
               <CodeLinePart PartType="Code">, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(address, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="49">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="48">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">address</CodeLinePart>
               <CodeLinePart PartType="Code">, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="49">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="48">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">Socket socket = blindFactory.createSocket(address, port);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="49">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Высокий" Severity="4">level-high</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>918</CWE>
      <ParentItem>d69f9a62f640ab81d668ee642811bc8b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>javax.net.SocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 54</Entry>
      <NumberLine>55</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>javax.net.SocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)</TrimmedFunction>
      <RawLine>Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</RawLine>
      <TrimmedRawLine>Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</TrimmedRawLine>
      <Place>f5de89e171f866656d8df581d110b7e3</Place>
      <AdditionalConditions>((address == "127.0.0.1")) &amp;&amp; ((port == "22")) &amp;&amp; ((localAddress == "127.0.0.1")) &amp;&amp; ((localPort == "23"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((address == "127.0.0.1")) &amp;&amp; ((port == "22")) &amp;&amp; ((localAddress == "127.0.0.1")) &amp;&amp; ((localPort == "23"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 55</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>HD9auwxPFmCUe44rIfn7ItkgnI4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</PrimaryFile>
      <Type DisplayName="Подделка запроса сервера" Id="Server-Side Request Forgery" GroupId="Подделка запроса сервераlevel-high">Server-Side Request Forgery</Type>
      <Counter>691</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="54">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="55">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">address</CodeLinePart>
               <CodeLinePart PartType="Code">, port, localAddress, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="56">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="54">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="55">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="56">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="54">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">address</CodeLinePart>
               <CodeLinePart PartType="Code">, int port, InetAddress localAddress, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="55">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="56">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="54">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="55">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">address</CodeLinePart>
               <CodeLinePart PartType="Code">, port, localAddress, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="56">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="54">
               <CodeLinePart PartType="Code">public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="55">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">Socket socket = blindFactory.createSocket(address, port, localAddress, localPort);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="56">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Высокий" Severity="4">level-high</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>918</CWE>
      <ParentItem>f5de89e171f866656d8df581d110b7e3</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>javax.net.SocketFactory.createSocket(java.lang.String, int)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 61</Entry>
      <NumberLine>62</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>javax.net.SocketFactory.createSocket(java.lang.String, int)</TrimmedFunction>
      <RawLine>Socket socket = blindFactory.createSocket(host, port);</RawLine>
      <TrimmedRawLine>Socket socket = blindFactory.createSocket(host, port);</TrimmedRawLine>
      <Place>5b4c0a865b5bd4d4a975d2d60d3c0b5e</Place>
      <AdditionalConditions>((host == "http://www.ptsecurity.com"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((host == "http://www.ptsecurity.com"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 62</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>Socket socket = blindFactory.createSocket(host, port);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>OIX0mJ0zKYt8ffBG0hWrIDVgEPo=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</PrimaryFile>
      <Type DisplayName="Подделка запроса сервера" Id="Server-Side Request Forgery" GroupId="Подделка запроса сервераlevel-high">Server-Side Request Forgery</Type>
      <Counter>688</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="62">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">host</CodeLinePart>
               <CodeLinePart PartType="Code">, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="61">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Socket createSocket(String host, int port) throws IOException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(host, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="57">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="61">
               <CodeLinePart PartType="Code">public Socket createSocket(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">host</CodeLinePart>
               <CodeLinePart PartType="Code">, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(host, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="62">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">host</CodeLinePart>
               <CodeLinePart PartType="Code">, port);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="62">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">Socket socket = blindFactory.createSocket(host, port);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Высокий" Severity="4">level-high</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>918</CWE>
      <ParentItem>5b4c0a865b5bd4d4a975d2d60d3c0b5e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>javax.net.SocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 68</Entry>
      <NumberLine>69</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>javax.net.SocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)</TrimmedFunction>
      <RawLine>Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</RawLine>
      <TrimmedRawLine>Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</TrimmedRawLine>
      <Place>cfa7694cb834ac806317f430b94c2706</Place>
      <AdditionalConditions>((host == "http://www.ptsecurity.com"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((host == "http://www.ptsecurity.com"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java : 69</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>DxB3ehyD8lelaqkjgILgoG4kW1E=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</PrimaryFile>
      <Type DisplayName="Подделка запроса сервера" Id="Server-Side Request Forgery" GroupId="Подделка запроса сервераlevel-high">Server-Side Request Forgery</Type>
      <Counter>689</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="69">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">host</CodeLinePart>
               <CodeLinePart PartType="Code">, port, localHost, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="71">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="72">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="68">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="71">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="68">
               <CodeLinePart PartType="Code">public Socket createSocket(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">host</CodeLinePart>
               <CodeLinePart PartType="Code">, int port, InetAddress localHost, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="71">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="69">
               <CodeLinePart PartType="Code">    Socket socket = blindFactory.createSocket(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">host</CodeLinePart>
               <CodeLinePart PartType="Code">, port, localHost, localPort);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="71">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="72">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\BlindSSLSocketFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="69">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">Socket socket = blindFactory.createSocket(host, port, localHost, localPort);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">    socket.setKeepAlive(true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="71">
               <CodeLinePart PartType="Code">    return socket;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="72">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Высокий" Severity="4">level-high</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>918</CWE>
      <ParentItem>cfa7694cb834ac806317f430b94c2706</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 32</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((userAccountDN == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userAccountDN == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>EEHE+hWdNu6lk535xYbZlCmOPCg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>693</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="32">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String userAccountDN, String userAccountPassword)  {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 50</Entry>
      <NumberLine>61</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>49830d9b44c15e2fec57b799b22c91fa</Place>
      <AdditionalConditions>((userAccountDN == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userAccountDN == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 61</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>MDuddFucGze0xxVBe2L+QcOhzG8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>692</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="59">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="61">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">        return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="50">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Optional&lt;InitialLdapContext&gt; createBasicLdapContext(String userAccountDN, String userAccountPassword) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="52">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "objectSID objectGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">        return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="50">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createBasicLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="52">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="53">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "objectSID objectGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="59">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="61">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="59">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="61">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="58">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="59">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="61">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>49830d9b44c15e2fec57b799b22c91fa</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 534</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>4a7muYhf4rTH3KUvzLS7yqfZ2dA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>27</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="534">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean changePasswordWithUserAccount(LdapUserAccount currentUser, String userDN, byte[] quotedOldPasswordBytes, String newPassword) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="535">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="536">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="537">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="534">
               <CodeLinePart PartType="Code">public boolean changePasswordWithUserAccount(LdapUserAccount currentUser, String userDN, byte[] quotedOldPasswordBytes, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="535">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="536">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="537">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="538">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[2];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 567</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>eoAGLYo2fv2OlXFT3oc8lXT6sbc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>47</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="567">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String replaceUserAccountAttributes(LdapUserAccount currentUser, String updateUserDN, Map&lt;String, String&gt; attributes) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="568">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">    StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="567">
               <CodeLinePart PartType="Code">public String replaceUserAccountAttributes(LdapUserAccount currentUser, String updateUserDN, Map&lt;String, String&gt; attributes) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="568">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">    StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="571">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 352</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>M2u1JWqeLXI4Pe4YikMoKIDHQRY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>254</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="348">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно заблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="349">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="350">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="352">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void enableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="353">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="354">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="355">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="349">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="350">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="352">
               <CodeLinePart PartType="Code">public void enableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="353">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="354">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="355">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="356">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>AdftScRIAtyPt8mvMkDk7NSUjwg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>49</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="72">
               <CodeLinePart PartType="Code">    //generate userDN and userLogin</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="73">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; uniqueAttributesMap = generateSamAccountNameDisplayNameDistinguishedNameForBasicUserAccount(user.getLastName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>Qj5WLa5bH4uSbPiWAPrSd2sgvvQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>179</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>WCpzTQ45A+1j8ZbtCQ24wlNbVlk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>99</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="176">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="180">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="181">
               <CodeLinePart PartType="Code">    //generate serviceUserDN and serviceUserLogin</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="182">
               <CodeLinePart PartType="Code">    String serviceUserLogin;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>4K+5Cjayokhl1Ni15oYsbWp9u+0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>235</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="279">
               <CodeLinePart PartType="Code">    setAccountPassword(result, userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>gvzOlbN7IZyjZhjiojTGsY2fIE4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>121</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="311">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>kEsSh1KCPgtxEkYLL+VB3Sj+T04=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>158</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="567">
               <CodeLinePart PartType="Code">public String replaceUserAccountAttributes(LdapUserAccount currentUser, String updateUserDN, Map&lt;String, String&gt; attributes) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="568">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">    StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="571">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 343</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>wN+ialXKLDMc+eoZWX58Xd+Xcnw=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>252</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    } else throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="343">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void disableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="344">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="345">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="346">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="343">
               <CodeLinePart PartType="Code">public void disableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="344">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="345">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="346">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="347">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 585</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((currentUser.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>1SxCxUJca+uEohDERtLeN6GEHYU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>256</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="585">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String newValue) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String newValue) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">currentUser.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">        currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 553</Entry>
      <NumberLine>45</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</TrimmedRawLine>
      <Place>65f712eaca364a57495435229e11d0a1</Place>
      <AdditionalConditions>((ldapUserAccount.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((ldapUserAccount.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java : 45</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>U/cxq/ZQHppeodLsTCWtsjMT89w=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>29</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="549">
               <CodeLinePart PartType="Code">            throw new LdapServiceException("При попытке смены пароля возникла непредвиденная ошибка. Повторите попытку позже.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="550">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="551">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="553">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean modifyUserAccountAttributeWithUserAccount(LdapUserAccount ldapUserAccount, String attributeName, String attributeValue) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="554">
               <CodeLinePart PartType="Code">    ldapUserAccount.setLdapContext(ldapContextFactory.createSecureLdapContext(ldapUserAccount.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="555">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(ldapUserAccount.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="556">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="550">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="551">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="553">
               <CodeLinePart PartType="Code">public boolean modifyUserAccountAttributeWithUserAccount(LdapUserAccount ldapUserAccount, String attributeName, String attributeValue) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="554">
               <CodeLinePart PartType="Code">    ldapUserAccount.setLdapContext(ldapContextFactory.createSecureLdapContext(</CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapUserAccount.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">,</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="555">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(ldapUserAccount.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="556">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="557">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(attributeName, attributeValue));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createServiceLdapContext() {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    return createSecureLdapContext(serviceAccountDN, serviceAccountPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="32">
               <CodeLinePart PartType="Code">public Optional&lt;InitialLdapContext&gt; createSecureLdapContext(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String userAccountPassword)  {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    Hashtable&lt;String, Object&gt; env = new Hashtable&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">    env.put("java.naming.ldap.attributes.binary", "ntSecurityDescriptor objectSID objectGUID schemaIDGUID rightsGUID");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating userAccount (%s) context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userAccountDN</CodeLinePart>
               <CodeLinePart PartType="Code">,e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="45">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapContextFactory.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\factory\LdapContextFactory.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="42">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="43">
               <CodeLinePart PartType="Code">    return Optional.of(new InitialLdapContext(env, null));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="44">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="45">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating userAccount (%s) context: %s", userAccountDN,e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">    return Optional.empty();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>65f712eaca364a57495435229e11d0a1</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>137</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</TrimmedRawLine>
      <Place>b842b6572559ee2d996a0d006a472ddb</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 137</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>fnTTWij2s4pwYrWaBSzdyzbUxps=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>76</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="134">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="135">
               <CodeLinePart PartType="Code">    DirContext ldapResult = currentUser.getLdapContext().createSubcontext(user.getDistinguishedName(), container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="137">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="139">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="134">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="135">
               <CodeLinePart PartType="Code">    DirContext ldapResult = currentUser.getLdapContext().createSubcontext(user.getDistinguishedName(), container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="137">
               <CodeLinePart PartType="Code">    logger.info(String.format("User account with dn %s was creates successfully", </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="139">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="134">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="135">
               <CodeLinePart PartType="Code">    DirContext ldapResult = currentUser.getLdapContext().createSubcontext(user.getDistinguishedName(), container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="137">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="139">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="134">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="135">
               <CodeLinePart PartType="Code">    DirContext ldapResult = currentUser.getLdapContext().createSubcontext(user.getDistinguishedName(), container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="137">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="139">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>b842b6572559ee2d996a0d006a472ddb</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>139</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</TrimmedRawLine>
      <Place>e7d7253e03608a5fbc8e132d48b1e752</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 139</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>R8GuOkVj6AGlMM1HmCGOuUHasqU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>77</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="137">
               <CodeLinePart PartType="Code">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="139">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="141">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="137">
               <CodeLinePart PartType="Code">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="139">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating user account with dn [%s]: %s", </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="141">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="137">
               <CodeLinePart PartType="Code">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="139">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="141">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="136">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="137">
               <CodeLinePart PartType="Code">    logger.info(String.format("User account with dn %s was creates successfully", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="138">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="139">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating user account with dn [%s]: %s", user.getDistinguishedName(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="140">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать персональную учетную запись с dn: %s", user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="141">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>e7d7253e03608a5fbc8e132d48b1e752</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>162</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</TrimmedRawLine>
      <Place>5722ee00a300f3015ca1591435d0b234</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 162</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>77NP3saH1gOpEqwJsBC+gDEVm8E=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>98</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="159">
               <CodeLinePart PartType="Code">        result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="160">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="161">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="162">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="163">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="164">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", String.format("Учетная запись %s не добавлена в выбранные группы.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="165">
               <CodeLinePart PartType="Code">    result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="159">
               <CodeLinePart PartType="Code">        result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="160">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="161">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="162">
               <CodeLinePart PartType="Code">    logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="163">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="164">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", String.format("Учетная запись %s не добавлена в выбранные группы.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="165">
               <CodeLinePart PartType="Code">    result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="159">
               <CodeLinePart PartType="Code">        result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="160">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="161">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="162">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="163">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="164">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", String.format("Учетная запись %s не добавлена в выбранные группы.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="165">
               <CodeLinePart PartType="Code">    result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="159">
               <CodeLinePart PartType="Code">        result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="160">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="161">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="162">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User's %s UAC and password are not set, user will not be added to basic group unil it's creation by AD.", user.getDistinguishedName()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="163">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="164">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", String.format("Учетная запись %s не добавлена в выбранные группы.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="165">
               <CodeLinePart PartType="Code">    result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>5722ee00a300f3015ca1591435d0b234</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>244</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</RawLine>
      <TrimmedRawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</TrimmedRawLine>
      <Place>178ef433e93da14fd3f66648f632f03f</Place>
      <AdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 244</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>7c7LKgVRSFjE6+GSBbDOJYCx7vo=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>107</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="244">
               <CodeLinePart PartType="Code">logger.info("Will be created ldapUserAccount: " + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="244">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>178ef433e93da14fd3f66648f632f03f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>244</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</RawLine>
      <TrimmedRawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</TrimmedRawLine>
      <Place>178ef433e93da14fd3f66648f632f03f</Place>
      <AdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 244</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ZwA2cxmSxmzxtv8kMjxhC+dFYsU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>106</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">"CN=" + serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="244">
               <CodeLinePart PartType="Code">logger.info("Will be created ldapUserAccount: " + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="244">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>178ef433e93da14fd3f66648f632f03f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>244</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</RawLine>
      <TrimmedRawLine>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</TrimmedRawLine>
      <Place>178ef433e93da14fd3f66648f632f03f</Place>
      <AdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 244</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info("Will be created ldapUserAccount: " + serviceUserDN);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>DLLGQUQRoVdwgJR3AIsuPTlezww=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>108</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapSearch.getOuDnByName(serviceUser.getCompany(), null)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="194">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code"> = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="244">
               <CodeLinePart PartType="Code">logger.info("Will be created ldapUserAccount: " + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="241">
               <CodeLinePart PartType="Code">DirContext ldapResult;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="242">
               <CodeLinePart PartType="Code">ldapResult = currentUser.getLdapContext().createSubcontext(serviceUserDN, container);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="244">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">tch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="246">
               <CodeLinePart PartType="Code">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>178ef433e93da14fd3f66648f632f03f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>246</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</TrimmedRawLine>
      <Place>3773fa94e37fcd56bcf718517b7ee694</Place>
      <AdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 246</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>fD0QauE8GBFxTx+xLPPO6o9PKNc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>111</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapSearch.getOuDnByName(serviceUser.getCompany(), null)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="194">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code"> = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating service user account with dn [%s]: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="246">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>3773fa94e37fcd56bcf718517b7ee694</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>246</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</TrimmedRawLine>
      <Place>3773fa94e37fcd56bcf718517b7ee694</Place>
      <AdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 246</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>UZQmc906e8eT9h6MdrneKHO6q4M=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>110</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating service user account with dn [%s]: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="246">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>3773fa94e37fcd56bcf718517b7ee694</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>246</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</TrimmedRawLine>
      <Place>3773fa94e37fcd56bcf718517b7ee694</Place>
      <AdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 246</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>HNFXVGj+VOyoTERf0OPXpbBh2vM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>109</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">"CN=" + serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error creating service user account with dn [%s]: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="246">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="243">
               <CodeLinePart PartType="Code">    result.put("ldapResult", ldapResult);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="244">
               <CodeLinePart PartType="Code">    logger.info("Will be created ldapUserAccount: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="245">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="246">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error creating service user account with dn [%s]: %s", serviceUserDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="247">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось создать сервисную учетную запись с dn: %s", serviceUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="248">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>3773fa94e37fcd56bcf718517b7ee694</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rsuIflXC5bQMx4CrFdWfq5nQBzM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>159</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, newUserDistinguishedName, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>wFpxzTSXE4C5mUG9xgWFaGpz7c8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>161</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>efI7A72FrEIEMBYsp0Qg81oP9Ys=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>160</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>K/1TVgeA/BR2ErSlpZostR6YxA4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>162</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>Rhk7qxLks3yCe/LEq+MWKJng/Wk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>167</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>tMATvjGZcvDqkFUbJZCgGxXljQk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>164</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>S1ijBv75s3EwMwo+HZ/p+rQHXck=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>178</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>3wM+sqRM0lbnCaVCON/b/HTZbrM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>177</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rvC/+9RdlrcF3b56O2+U8sNc7/k=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>176</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>YbXeNJpt9/607HGbAn+xalmAuBA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>163</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ij2tn32ZxB+snco3slCZOz7unW0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>174</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>2BDpENLQ0boe1mt39ocqLeEY8ho=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>173</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>apSvkFOIA8vYZV313qSIyJHxUjo=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>175</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="492">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>3iKt7V7sSR4FjIACLAXNshD71zs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>171</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>FXha8VtHKEm9For3l0QnNG2+guE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>170</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">private Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="490">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="491">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">    String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>0GTfb9q65J3sw0lCHeYp7kujp1c=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>169</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + user.getFirstName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ef+ovT6QTAzGMt9WgTFHEcnfQa8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>168</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="491">
               <CodeLinePart PartType="Code">else fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="489">
               <CodeLinePart PartType="Code">String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="490">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="491">
               <CodeLinePart PartType="Code">else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="492">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="493">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="494">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName() + " " + user.getSamAccountName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getSamAccountName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName() + " " + user.getSamAccountName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getSamAccountName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName() + " " + user.getSamAccountName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getSamAccountName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName() + " " + user.getSamAccountName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getSamAccountName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>7EgFmbYKf1pd4dFWCfCgln1eZko=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>166</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>((user.getSamAccountName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getSamAccountName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>kLoKJ8dyWTzVaqZ22aYmCTTF9tw=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>165</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">fullName + " " + user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getSamAccountName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="503">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="502">
               <CodeLinePart PartType="Code">if (searchResult != null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="503">
               <CodeLinePart PartType="Code">    fullName = fullName + " " + user.getSamAccountName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="504">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="505">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="506">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="507">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>336</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</TrimmedRawLine>
      <Place>1637a2c727799ed7341d8e4e20e7e48b</Place>
      <AdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) != null == true || (null != null == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 336</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>LvWyKOHAUYdPLa/I3w0g/xNcM40=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>172</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="495">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="496">
               <CodeLinePart PartType="Code">if (searchResult != null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="497">
               <CodeLinePart PartType="Code">{</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="498">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + disabledUsersDuplicateOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="499">
               <CodeLinePart PartType="Code">    if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="500">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="501">
               <CodeLinePart PartType="Code">    searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code">result.put("distinguishedName", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="512">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="513">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="514">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="515">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">result.put("distinguishedName", userDN)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="519">
               <CodeLinePart PartType="Code">ic boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap</CodeLinePart>
               <CodeLinePart PartType="Code">.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dnMap.get("distinguishedName")</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="315">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="317">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="336">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="333">
               <CodeLinePart PartType="Code">    ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="334">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="336">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", user.getDistinguishedName(), newUserDistinguishedName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="338">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">se throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>1637a2c727799ed7341d8e4e20e7e48b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>9FmGAIjGydT9l7t1KzMzs6tMCtc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>120</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapSearch.getOuDnByName(serviceUser.getCompany(), null)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="194">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code"> = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="253">
               <CodeLinePart PartType="Code">setAccountPassword(result, serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">//set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="256">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="257">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="258">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="259">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>OlTG6lIvnbHOrg5L9FMk388uZ6E=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>119</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="253">
               <CodeLinePart PartType="Code">setAccountPassword(result, serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">//set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="256">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="257">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="258">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="259">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>zuZw/QvqOUVMLGrZ6zrm0OKhXLA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>118</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">"CN=" + serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="253">
               <CodeLinePart PartType="Code">setAccountPassword(result, serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">//set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="256">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="257">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="258">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="259">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", false);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>hFwe7CJb5fnJos9k/A3PGL8tv7Q=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>188</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>Vv4pks+N0E/9kUTr9e/wMxNmuOQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>238</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="279">
               <CodeLinePart PartType="Code">setAccountPassword(result, userDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="280">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 343</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>gLAgICtOJTgEsMFGOQdnL0nA4Z8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>253</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    } else throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="343">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void disableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="344">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="345">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="346">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="343">
               <CodeLinePart PartType="Code">public void disableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="344">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="345">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="346">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="347">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="348">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно заблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="349">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.lang.Integer.parseInt(user.getUserAccountControl()) &amp; 2 == 2 == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.lang.Integer.parseInt(user.getUserAccountControl()) &amp; 2 == 2 == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>hLGI9zV0WbVsibR5e38l4a/Uyus=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>144</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="316">
               <CodeLinePart PartType="Code">if (dnMap.containsKey("distinguishedName")) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="317">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = dnMap.get("distinguishedName");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="318">
               <CodeLinePart PartType="Code">    if (!ldapUserAccountControlComponent.isAccountDisabled(user.getUserAccountControl())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="319">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">    List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 352</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>EGNIUJPdD/JbDTpf672UJwX8Qt8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>255</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="348">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно заблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="349">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="350">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="352">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void enableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="353">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="354">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="355">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="352">
               <CodeLinePart PartType="Code">public void enableLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="353">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="354">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="355">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="356">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>378</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>8870a709cec174e493a04ef3b5714a89</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 378</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>vEboyAxtCuK4HYXlAPli9TePdS8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>84</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="146">
               <CodeLinePart PartType="Code">setAccountPassword(result, user.getDistinguishedName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="147">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="148">
               <CodeLinePart PartType="Code">//set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="149">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="150">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">    return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="372">
               <CodeLinePart PartType="Code">private void setAccountUserAccountControl(InitialLdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">        mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="378">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.USER_ACCOUNT_CONTROL.toString(), value));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="376">
               <CodeLinePart PartType="Code">    ldapContext.modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="378">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] userAccountControl: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>8870a709cec174e493a04ef3b5714a89</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>394</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>d73d1d5e7942b8887d2549dbb1eae614</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 394</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>3cGOw6YY5hsP9sVUnOz8a+C9pVM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>83</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="144">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="145">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="146">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="147">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="148">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="149">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] password: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="394">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d73d1d5e7942b8887d2549dbb1eae614</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>394</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>d73d1d5e7942b8887d2549dbb1eae614</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 394</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>m24Qu5qeq8es4kmifRN3FTq+4Gs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>237</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">        LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="279">
               <CodeLinePart PartType="Code">setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="280">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), userDn, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] password: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="394">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d73d1d5e7942b8887d2549dbb1eae614</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>394</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>d73d1d5e7942b8887d2549dbb1eae614</Place>
      <AdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 394</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>wOUnrYnuzKLyym3fc58XFP5RtTE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>115</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">"CN=" + serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] password: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="394">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d73d1d5e7942b8887d2549dbb1eae614</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>394</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>d73d1d5e7942b8887d2549dbb1eae614</Place>
      <AdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 394</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>xNmfpBM7IouTd28qameZ2XfYgq8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>116</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] password: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="394">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d73d1d5e7942b8887d2549dbb1eae614</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>394</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>d73d1d5e7942b8887d2549dbb1eae614</Place>
      <AdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 394</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>vOfWLD5SD+yQZKgMACdd2kmRWaI=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>117</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapSearch.getOuDnByName(serviceUser.getCompany(), null)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="194">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code"> = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error setting service user with dn [%s] password: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="394">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="391">
               <CodeLinePart PartType="Code">    changePasswordWithServiceAccount(userDN, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">    result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="394">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="395">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось сохранить пароль для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="396">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="397">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d73d1d5e7942b8887d2549dbb1eae614</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 519</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>((userDN == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDN == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>h6yXt+uKFFfxqXR3nrPTdCxGNXk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>26</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="519">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean changePasswordWithServiceAccount(String userDN, String newPassword) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>fTWrA0s7d6FwZRitjF899VUTBSY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>236</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">        LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="279">
               <CodeLinePart PartType="Code">setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="280">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), userDn, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="388">
               <CodeLinePart PartType="Code">        .useUpper(true)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="389">
               <CodeLinePart PartType="Code">        .build();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="390">
               <CodeLinePart PartType="Code">String userPassword = passwordGenerator.generate(8);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="391">
               <CodeLinePart PartType="Code">changePasswordWithServiceAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="394">
               <CodeLinePart PartType="Code">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((serviceUser.getDisplayName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>uw9lbYmIW6Zn4Z+P+9JnRsxD4Fs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>112</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">"CN=" + serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">serviceUser.getDisplayName()</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="388">
               <CodeLinePart PartType="Code">        .useUpper(true)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="389">
               <CodeLinePart PartType="Code">        .build();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="390">
               <CodeLinePart PartType="Code">String userPassword = passwordGenerator.generate(8);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="391">
               <CodeLinePart PartType="Code">changePasswordWithServiceAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="394">
               <CodeLinePart PartType="Code">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + serviceUser.getDisplayName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + serviceUser.getDisplayName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>7VT3Gm7/uqs4i94I2rBP7fYd+z8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>113</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="388">
               <CodeLinePart PartType="Code">        .useUpper(true)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="389">
               <CodeLinePart PartType="Code">        .build();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="390">
               <CodeLinePart PartType="Code">String userPassword = passwordGenerator.generate(8);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="391">
               <CodeLinePart PartType="Code">changePasswordWithServiceAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="394">
               <CodeLinePart PartType="Code">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 176</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((new ru.mosreg.ldap.core.LdapSearch(new ru.mosreg.ldap.config.LdapConfigurationProperties(), new ru.mosreg.ldap.core.factory.LdapContextFactory(host, sslPort, basicPort, "CN=Портал смены пароля в ЕКП,OU=ServiceAcc,OU=Служебное,DC=dp,DC=mosreg,DC=ru", servicePassword), new ru.mosreg.ldap.core.repo.AdminsRepository()).getOuDnByName(serviceUser.getCompany(), null) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>z6viBZtKuOmgQrRbsKTHOUKMRyw=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>114</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="170">
               <CodeLinePart PartType="Code">    result.put("user", user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="172">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="173">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="176">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createServiceUserAccount(LdapUserAccount currentUser, LdapUserAccount serviceUser, String supposedServiceUserLogin,</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="177">
               <CodeLinePart PartType="Code">                                                    boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="178">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="179">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">ldapSearch.getOuDnByName(serviceUser.getCompany(), null)</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">if (Strings.isNullOrEmpty(serviceUser.getCompany()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Организация не выбрана");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="194">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code"> = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = serviceOu + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String serviceUserOUDN = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceOu + "," + companyOuDn</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="194">
               <CodeLinePart PartType="Code">String companyOuDn = ldapSearch.getOuDnByName(serviceUser.getCompany(), null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="195">
               <CodeLinePart PartType="Code">if (companyOuDn == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="196">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU по выбранной организации: " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="197">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = serviceOu + "," + companyOuDn;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserOUDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String serviceUserDN = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="198">
               <CodeLinePart PartType="Code">byte[] serviceOuDnGuid = ldapSearch.getObjectGuidByDn(serviceUserOUDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="199">
               <CodeLinePart PartType="Code">if (serviceOuDnGuid == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="200">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось найти OU services по выбранной организации " + serviceUser.getCompany());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="201">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + serviceUser.getDisplayName()) + "," + serviceUserOUDN;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="202">
               <CodeLinePart PartType="Code">if (serviceUserDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="203">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Сгенерированное distinguishedName длиннее 256 символов: " + serviceUserDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">serviceUser.setDistinguishedName(serviceUserDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="250">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(serviceUserDN)) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="251">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="252">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="253">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">serviceUserDN</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="254">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="255">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="256">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), serviceUserDN, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="388">
               <CodeLinePart PartType="Code">        .useUpper(true)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="389">
               <CodeLinePart PartType="Code">        .build();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="390">
               <CodeLinePart PartType="Code">String userPassword = passwordGenerator.generate(8);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="391">
               <CodeLinePart PartType="Code">changePasswordWithServiceAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="394">
               <CodeLinePart PartType="Code">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>529</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>c93660b4d822c2860a0f3f9cb9a9cc37</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 529</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>BNVIfmNsx9RvsyxNO15DeHoIjT4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>82</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="143">
               <CodeLinePart PartType="Code">if (checkUserAccountCreation(user.getDistinguishedName())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="144">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="145">
               <CodeLinePart PartType="Code">        //generate and set users password</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="146">
               <CodeLinePart PartType="Code">        setAccountPassword(result, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="147">
               <CodeLinePart PartType="Code">        delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="148">
               <CodeLinePart PartType="Code">        //set users uac</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="149">
               <CodeLinePart PartType="Code">        setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось сохранить флаги разрешений для учетной записи с dn: %s", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="380">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="381">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="383">
               <CodeLinePart PartType="Code">private void setAccountPassword(Map&lt;String, Object&gt; result, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="384">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="385">
               <CodeLinePart PartType="Code">        PasswordGenerator passwordGenerator = new PasswordGenerator.PasswordGeneratorBuilder()</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="386">
               <CodeLinePart PartType="Code">                .useDigits(true)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="388">
               <CodeLinePart PartType="Code">        .useUpper(true)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="389">
               <CodeLinePart PartType="Code">        .build();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="390">
               <CodeLinePart PartType="Code">String userPassword = passwordGenerator.generate(8);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="391">
               <CodeLinePart PartType="Code">changePasswordWithServiceAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="392">
               <CodeLinePart PartType="Code">result.put("userPassword", userPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="393">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="394">
               <CodeLinePart PartType="Code">logger.error(String.format("Error setting service user with dn [%s] password: %s", userDN, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="515">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", userDN);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="516">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="517">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="519">
               <CodeLinePart PartType="Code">public boolean changePasswordWithServiceAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="520">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="521">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="522">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(LdifAttribute.PASSWORD.toString(), quotedNewPasswordBytes));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="529">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="526">
               <CodeLinePart PartType="Code">    ldapContext.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="527">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="528">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="529">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with service account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c93660b4d822c2860a0f3f9cb9a9cc37</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 534</Entry>
      <NumberLine>545</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</TrimmedRawLine>
      <Place>883a2e94e530b665fed18ee88944b64d</Place>
      <AdditionalConditions>((userDN == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDN == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 545</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>pKPcCnlF8L3MKcq/KzooNBdXfPk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>28</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="542">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="543">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="544">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="545">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="546">
               <CodeLinePart PartType="Code">    if (e.getExplanation().contains(historyComplexityViolation))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="547">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить пароль учетной записи, т.к. он не удовлетворяет парольной политике домена. Наиболее вероятно, что выбранный вами пароль совпадает с одним из 5 последних паролей. Измените пароль и повторите попытку.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="548">
               <CodeLinePart PartType="Code">    else</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="534">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean changePasswordWithUserAccount(LdapUserAccount currentUser, String userDN, byte[] quotedOldPasswordBytes, String newPassword) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="535">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="536">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="537">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="530">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить пароль учетной записи %s. Попробуйте позже.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="531">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="532">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="534">
               <CodeLinePart PartType="Code">public boolean changePasswordWithUserAccount(LdapUserAccount currentUser, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, byte[] quotedOldPasswordBytes, String newPassword) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="535">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="536">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="537">
               <CodeLinePart PartType="Code">    byte[] quotedNewPasswordBytes = LdapPasswordChangeUtil.quoteAndEncodePassword(newPassword);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="542">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="543">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="544">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="545">
               <CodeLinePart PartType="Code">    logger.error(String.format("An error occurred during user %s password change with user account context: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="546">
               <CodeLinePart PartType="Code">    if (e.getExplanation().contains(historyComplexityViolation))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="547">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить пароль учетной записи, т.к. он не удовлетворяет парольной политике домена. Наиболее вероятно, что выбранный вами пароль совпадает с одним из 5 последних паролей. Измените пароль и повторите попытку.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="548">
               <CodeLinePart PartType="Code">    else</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="542">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="543">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="544">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="545">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="546">
               <CodeLinePart PartType="Code">    if (e.getExplanation().contains(historyComplexityViolation))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="547">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить пароль учетной записи, т.к. он не удовлетворяет парольной политике домена. Наиболее вероятно, что выбранный вами пароль совпадает с одним из 5 последних паролей. Измените пароль и повторите попытку.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="548">
               <CodeLinePart PartType="Code">    else</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="542">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(userDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="543">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="544">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="545">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("An error occurred during user %s password change with user account context: %s", userDN, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="546">
               <CodeLinePart PartType="Code">    if (e.getExplanation().contains(historyComplexityViolation))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="547">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить пароль учетной записи, т.к. он не удовлетворяет парольной политике домена. Наиболее вероятно, что выбранный вами пароль совпадает с одним из 5 последних паролей. Измените пароль и повторите попытку.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="548">
               <CodeLinePart PartType="Code">    else</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>883a2e94e530b665fed18ee88944b64d</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 553</Entry>
      <NumberLine>562</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</TrimmedRawLine>
      <Place>aaf619d441aa8ae51c8abae79be4cd2f</Place>
      <AdditionalConditions>((attributeName == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((attributeName == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 562</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>47tGW9+9v/u4F7EmVp/Haa1bwfs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>30</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="559">
               <CodeLinePart PartType="Code">    ldapUserAccount.getLdapContext().modifyAttributes(ldapUserAccount.getDistinguishedName(), mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="560">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="561">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="562">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="549">
               <CodeLinePart PartType="Code">            throw new LdapServiceException("При попытке смены пароля возникла непредвиденная ошибка. Повторите попытку позже.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="550">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="551">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="553">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean modifyUserAccountAttributeWithUserAccount(LdapUserAccount ldapUserAccount, String attributeName, String attributeValue) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="554">
               <CodeLinePart PartType="Code">    ldapUserAccount.setLdapContext(ldapContextFactory.createSecureLdapContext(ldapUserAccount.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="555">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(ldapUserAccount.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="556">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="549">
               <CodeLinePart PartType="Code">            throw new LdapServiceException("При попытке смены пароля возникла непредвиденная ошибка. Повторите попытку позже.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="550">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="551">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="553">
               <CodeLinePart PartType="Code">public boolean modifyUserAccountAttributeWithUserAccount(LdapUserAccount ldapUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">attributeName</CodeLinePart>
               <CodeLinePart PartType="Code">, String attributeValue) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="554">
               <CodeLinePart PartType="Code">    ldapUserAccount.setLdapContext(ldapContextFactory.createSecureLdapContext(ldapUserAccount.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="555">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(ldapUserAccount.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="556">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="559">
               <CodeLinePart PartType="Code">    ldapUserAccount.getLdapContext().modifyAttributes(ldapUserAccount.getDistinguishedName(), mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="560">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="561">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="562">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during attribute %s modification: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attributeName</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="559">
               <CodeLinePart PartType="Code">    ldapUserAccount.getLdapContext().modifyAttributes(ldapUserAccount.getDistinguishedName(), mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="560">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="561">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="562">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="559">
               <CodeLinePart PartType="Code">    ldapUserAccount.getLdapContext().modifyAttributes(ldapUserAccount.getDistinguishedName(), mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="560">
               <CodeLinePart PartType="Code">    return true;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="561">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="562">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during attribute %s modification: %s", attributeName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>aaf619d441aa8ae51c8abae79be4cd2f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 567</Entry>
      <NumberLine>578</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</TrimmedRawLine>
      <Place>06470a3061b663aea958216629d55004</Place>
      <AdditionalConditions>((attributes == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((attributes == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 578</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>p5pIdRGUKTZr9EFj+qjw7lA22dc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>48</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="576">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="577">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="578">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="579">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="580">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="567">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String replaceUserAccountAttributes(LdapUserAccount currentUser, String updateUserDN, Map&lt;String, String&gt; attributes) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="568">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">    StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="563">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не удалось изменить атрибут %s учетной записи", attributeName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="564">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="565">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="567">
               <CodeLinePart PartType="Code">public String replaceUserAccountAttributes(LdapUserAccount currentUser, String updateUserDN, Map&lt;String, String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">attributes</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="568">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">    StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">        LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="571">
               <CodeLinePart PartType="Code">ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="572">
               <CodeLinePart PartType="Code">for (Map.Entry&lt;String, String&gt; attribute : </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attributes</CodeLinePart>
               <CodeLinePart PartType="Code">.entrySet()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="573">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(attribute.getKey(), attribute.getValue()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="574">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">        currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">        LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="571">
               <CodeLinePart PartType="Code">ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="572">
               <CodeLinePart PartType="Code">for (Map.Entry&lt;String, String&gt; attribute : </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attributes.entrySet()</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="573">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(attribute.getKey(), attribute.getValue()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="574">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">        currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="569">
               <CodeLinePart PartType="Code">        LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="570">
               <CodeLinePart PartType="Code">StringBuilder modificationAttributesMessage = new StringBuilder(String.format("Результат обновления учетной записи %s:&lt;br&gt;", updateUserDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="571">
               <CodeLinePart PartType="Code">ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="572">
               <CodeLinePart PartType="Code">for (Map.Entry&lt;String, String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attribute</CodeLinePart>
               <CodeLinePart PartType="Code"> : attributes.entrySet()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="573">
               <CodeLinePart PartType="Code">    mods[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(attribute.getKey(), attribute.getValue()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="574">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">        currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="576">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="577">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="578">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attribute</CodeLinePart>
               <CodeLinePart PartType="Code"> %s modification: %s", attribute.getKey(), e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="579">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="580">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="576">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="577">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="578">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during attribute %s modification: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">attribute.getKey()</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="579">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="580">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="576">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="577">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="578">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="579">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="580">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="575">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().modifyAttributes(updateUserDN, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="576">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="577">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="578">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during attribute %s modification: %s", attribute.getKey(), e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="579">
               <CodeLinePart PartType="Code">    modificationAttributesMessage.append(String.format("&lt;li&gt;атрибут %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", attribute.getKey()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="580">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>06470a3061b663aea958216629d55004</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getMiddleName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>TiXzTx8bmzp4Sj02w9P7S+H20+Y=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>205</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getMiddleName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="470">
               <CodeLinePart PartType="Code">    else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>GN905xocyV78a86UBMtCseDtRCQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>206</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>EwCaG3qrR4plklvXqM3T8Vc+DX0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>207</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="465">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 585</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((oldValue == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((oldValue == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>yCnjAFdQupdxwepkaMPiDCSZz1I=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>257</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="585">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String newValue) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">oldValue</CodeLinePart>
               <CodeLinePart PartType="Code">, String newValue) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">oldValue</CodeLinePart>
               <CodeLinePart PartType="Code">, newValue, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getFirstName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>zLkubp+3F/iF56pNryLrDmDGkik=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>204</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " " + user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = user.getLastName() + " " + </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getFirstName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="470">
               <CodeLinePart PartType="Code">    else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getLastName() == "\nLog: Entry")) &amp;&amp; ((com.google.common.base.Strings.isNullOrEmpty(user.getMiddleName()) == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>45DbigqT6eOCyPKmsygFiVDnBsA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>203</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = </CodeLinePart>
               <CodeLinePart PartType="BestPlaceToFix">user.getLastName() + " "</CodeLinePart>
               <CodeLinePart PartType="Code"> + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="470">
               <CodeLinePart PartType="Code">    else fullName = </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getLastName()</CodeLinePart>
               <CodeLinePart PartType="Code"> + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="467">
               <CodeLinePart PartType="Code">private String generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="468">
               <CodeLinePart PartType="Code">    String fullName;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="469">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getMiddleName())) fullName = user.getLastName() + " " + user.getFirstName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="470">
               <CodeLinePart PartType="Code">    else </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code"> = user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="471">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(user.getOrganization().getDisabledUserOUDn()))</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="472">
               <CodeLinePart PartType="Code">        throw new LdapServiceException(String.format("Не задана организационная единица заблокированных пользователей для организации %s", user.getOrganization().getTitle()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">    byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN("CN=" + </CodeLinePart>
               <CodeLinePart PartType="DataOperation">fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String userDN = canonicalizeStringForLdapDN(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">"CN=" + fullName</CodeLinePart>
               <CodeLinePart PartType="Code">) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="357">
               <CodeLinePart PartType="Code">    modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись административно разблокирована через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(userInput)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="358">
               <CodeLinePart PartType="Code">    replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="359">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="361">
               <CodeLinePart PartType="Code">private static String canonicalizeStringForLdapDN(String userInput) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="362">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userInput</CodeLinePart>
               <CodeLinePart PartType="Code">)) return userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="363">
               <CodeLinePart PartType="Code">    String name = userInput;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">    for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">        int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>HuzSDo7YfMs4XlDnPMwqnOX84Z8=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>202</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">oldValue</CodeLinePart>
               <CodeLinePart PartType="Code">, String newValue) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">oldValue</CodeLinePart>
               <CodeLinePart PartType="Code">, newValue, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 585</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>((newValue == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((newValue == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>y1HDhLAHiR81lE4uCWsyXP6mcKs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>258</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="585">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String newValue) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>591</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</TrimmedRawLine>
      <Place>4604a2ab929396985cddc6689a4335f9</Place>
      <AdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>(("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry") || ("CN=" + user.getLastName() + " " + user.getFirstName().replace(java.lang.String.valueOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]), "\" + {'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) == "\nLog: Entry")) &amp;&amp; (("CN=" + user.getLastName() + " " + user.getFirstName() + " " + user.getMiddleName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true) || ("CN=" + user.getLastName() + " " + user.getFirstName().indexOf({'\', ',', '+', '"', '&lt;', '&gt;', ';'}[0]) != -1 == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 591</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>IQIIupWALsgY36Nqrsf1pnA8uJY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>208</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">for (int charIndex = 0; charIndex &lt; ldapDnEscapeSequence.length; ++charIndex) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">    int index = name.indexOf(ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="367">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code"> = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">return name;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">    if (index != -1)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="367">
               <CodeLinePart PartType="Code">        name = name.replace(String.valueOf(ldapDnEscapeSequence[charIndex]), "\\" + ldapDnEscapeSequence[charIndex]);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="369">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">name</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="372">
               <CodeLinePart PartType="Code">ate void setAccountUserAccountControl(InitialLdapContext ldapContext, String userDN, String value) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">String userDN = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="473">
               <CodeLinePart PartType="Code">byte[] searchResult = ldapSearch.getObjectGuidByDn(user.getOrganization().getDisabledUserOUDn());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="474">
               <CodeLinePart PartType="Code">if (searchResult == null)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="475">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось найти орагизационную единицу заблокированных пользователей %s", user.getOrganization().getDisabledUserOUDn()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="476">
               <CodeLinePart PartType="Code">String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code"> = canonicalizeStringForLdapDN("CN=" + fullName) + "," + user.getOrganization().getDisabledUserOUDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="477">
               <CodeLinePart PartType="Code">if (userDN.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="478">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Сгенерированное distinguishedName длиннее 256 символов: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="479">
               <CodeLinePart PartType="Code">searchResult = ldapSearch.getObjectGuidByDn(userDN);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="481">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Учетная запись со сгенерированным distinguishedName уже существует: %s. Блокировка не может быть выполнена.", userDN));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="482">
               <CodeLinePart PartType="Code">if (fullName.length() &gt; 256)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="483">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Отображаемое имя длиннее 256 символов: %s", fullName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="484">
               <CodeLinePart PartType="Code">return </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDN</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="485">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="487">
               <CodeLinePart PartType="Code">ate Map&lt;String, String&gt; generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="488">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="291">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="294">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code"> = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="295">
               <CodeLinePart PartType="Code">    if (Strings.isNullOrEmpty(newUserDistinguishedName)) throw new LdapServiceException("Не удалось сгенерировать DN для блокируемого пользователя");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="305">
               <CodeLinePart PartType="Code">result.put("modificationMessage",replaceUserAccountAttributes(currentUser, user.getDistinguishedName(), modifiedAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="306">
               <CodeLinePart PartType="Code">renameUserAccountUniqueAttribute(currentUser, user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newUserDistinguishedName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="581">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="582">
               <CodeLinePart PartType="Code">    return modificationAttributesMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="583">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="585">
               <CodeLinePart PartType="Code">public void renameUserAccountUniqueAttribute(LdapUserAccount currentUser, String oldValue, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="586">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="587">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">newValue</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="591">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="588">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="589">
               <CodeLinePart PartType="Code">    currentUser.getLdapContext().rename(oldValue, newValue);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="590">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="591">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error during renaming. Old value %s. New value %s: %s", oldValue, newValue, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">    throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4604a2ab929396985cddc6689a4335f9</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>604</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</TrimmedRawLine>
      <Place>9617681d7ce156e09d1fca13b2db0e62</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 604</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>d9qIPNOO8QKIEfabQCBhTBVmZdc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>86</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="604">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="149">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="150">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="604">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="604">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="604">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>9617681d7ce156e09d1fca13b2db0e62</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>604</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</TrimmedRawLine>
      <Place>9617681d7ce156e09d1fca13b2db0e62</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 604</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>kKQ1tMELpYyYSULu/G0WLmf+k9U=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>240</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="604">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), userDn, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="284">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="286">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="604">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="604">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="601">
               <CodeLinePart PartType="Code">String basicGroup = user.getOrganization().getAllUserGroupDn();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="602">
               <CodeLinePart PartType="Code">byte[] basicGroupGuid = ldapSearch.getObjectGuidByDn(basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="603">
               <CodeLinePart PartType="Code">if (basicGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="604">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="605">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Не найдена доменная группа безопасности. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>9617681d7ce156e09d1fca13b2db0e62</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>609</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</TrimmedRawLine>
      <Place>fdf9620dda2f3523c99ffd853c432f76</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 609</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>TePNe4npqa9mKqgoTHmSNCmwxCg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>241</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="609">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), userDn, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="284">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="286">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="609">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="609">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="609">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fdf9620dda2f3523c99ffd853c432f76</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>609</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</TrimmedRawLine>
      <Place>fdf9620dda2f3523c99ffd853c432f76</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 609</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>La/KO5cm6LbY/QOTNG5pWe96sNA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>87</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="609">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="149">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="150">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="609">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="609">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="606">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="607">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="608">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(basicGroup, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="609">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">        groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="612">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fdf9620dda2f3523c99ffd853c432f76</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>612</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</TrimmedRawLine>
      <Place>d4d6328fc31ed5145f28ae7e3f9c839f</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 612</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>KNfHoVS5pbE87G7VX8ccA0XUETM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>242</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="612">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="281">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), userDn, normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="282">
               <CodeLinePart PartType="Code">if (LdapUserAccountType.USER.equals(user.getType())) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="284">
               <CodeLinePart PartType="Code">    result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="286">
               <CodeLinePart PartType="Code">    result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="612">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="612">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="612">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d4d6328fc31ed5145f28ae7e3f9c839f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>612</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</TrimmedRawLine>
      <Place>d4d6328fc31ed5145f28ae7e3f9c839f</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 612</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>F4qc/F5m6gLwrMWKRS9QwYHbYA0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>88</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="612">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="149">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), normalUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="150">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="592">
               <CodeLinePart PartType="Code">        throw new LdapServiceException("Не удалось изменить идентифицирующие параметры учетной записи.");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="593">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="594">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="596">
               <CodeLinePart PartType="Code">private String addUserAccountToBasicGroup(LdapContext ldapContext, LdapUserAccount user, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="597">
               <CodeLinePart PartType="Code">    String groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="598">
               <CodeLinePart PartType="Code">    ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="599">
               <CodeLinePart PartType="Code">    javax.naming.directory.Attribute mod = new BasicAttribute(LdifAttribute.MEMBER.toString(), userDn);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="612">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, basicGroup, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="612">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="609">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, basicGroup));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="610">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Учетная запись %s успешно добавлена в доменную группу безопасности %s.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="611">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="612">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, basicGroup, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="613">
               <CodeLinePart PartType="Code">    groupAddMessage = String.format("Добавление учетной записи %s в доменную группу безопасности %s завершилось неудачно. Выполните данную операцию вручную.", user.getSamAccountName(), basicGroup);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="614">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d4d6328fc31ed5145f28ae7e3f9c839f</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>SidKUBjjLJHgyx8qvlUfsn8Y32Y=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>246</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>s3G3U6I+TaEKcem61KVxQHpBy5g=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>91</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>+u85bQsljuBJIKQDCHVyLdI3Fro=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>92</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 619</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>RvpK4KtxVH3V5rM0klwCFmSHxKY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>34</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>499BDzn3tEttfn6ZIYZCuVnVU+0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>245</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 619</Entry>
      <NumberLine>629</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>eda3020bb3e0e4b8fdbddfff5d4de2c0</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 629</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>D+6VOVZorjgmAels/GLNXG6Q760=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>33</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="629">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="626">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="627">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="628">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="629">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="630">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>eda3020bb3e0e4b8fdbddfff5d4de2c0</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>uEBeyx25xFw+RV4IbSt10DGX4mU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>247</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>mfeu2ZqoZ6LvawXb2Omo9w0Zy10=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>248</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>c6JQjJSWtO2NgkNWyYt/bSJTdI0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>93</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>eP8ANnPYC79u7Blnmt2DZ75zO7Y=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>94</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 619</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>/Z1CwMaWqbe02Rc8SrLiA/lVGbY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>36</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 619</Entry>
      <NumberLine>634</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>0ed9a7420f42ea7f23c3aec144197769</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 634</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>jJP2GgvXYAmT94Ze9vA5PoQLym0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>35</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="634">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="631">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="632">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="633">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="634">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">        groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="637">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>0ed9a7420f42ea7f23c3aec144197769</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>637</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>f817b791c92bf3cf1ab04fb9a48b4633</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 637</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>SNbK3xSAFwoBNzwYlz2Ymd2cRZ4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>249</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="637">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>f817b791c92bf3cf1ab04fb9a48b4633</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>637</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>f817b791c92bf3cf1ab04fb9a48b4633</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 637</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>eW0bkrfrmStefQaAIZkyM7ltAcs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>250</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="637">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>f817b791c92bf3cf1ab04fb9a48b4633</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>637</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>f817b791c92bf3cf1ab04fb9a48b4633</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 637</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>CSG7XhlWGRGXWrSZnNvAShTQSEo=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>96</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="637">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>f817b791c92bf3cf1ab04fb9a48b4633</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>637</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>f817b791c92bf3cf1ab04fb9a48b4633</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 637</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>iBnJyvexsRNEBK9kDqgumT9wE8k=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>95</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, user.getGroupDNList()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="637">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="634">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="635">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="636">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="637">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error adding user account with dn [%s] to group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="638">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>f817b791c92bf3cf1ab04fb9a48b4633</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 619</Entry>
      <NumberLine>642</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>aef5078bf98af02e5c0ef8caccc0313e</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 642</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rAB6pvEt33wXZV4BWJeLuBOgAgg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>37</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="642">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>aef5078bf98af02e5c0ef8caccc0313e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 275</Entry>
      <NumberLine>642</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>aef5078bf98af02e5c0ef8caccc0313e</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((ru.mosreg.ldap.core.domain.ldapobject.LdapUserAccountType.USER.equals(user.getType()) == true)) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 642</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>SPkQUyV99/6YROltGC8jwBDj9yE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>251</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="270">
               <CodeLinePart PartType="Code">    result.put("user", serviceUser);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="272">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="273">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="275">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; updateLdapUserAccount(LdapUserAccount currentUser, LdapUserAccount user, String userDn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="276">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="277">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="278">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="283">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="284">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="285">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="286">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">rn result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="642">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>aef5078bf98af02e5c0ef8caccc0313e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 66</Entry>
      <NumberLine>642</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>aef5078bf98af02e5c0ef8caccc0313e</Place>
      <AdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getGroupDNList() == "\nLog: Entry")) &amp;&amp; ((user.getGroupDNList() != null &amp;&amp; !user.getGroupDNList().isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 642</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>wdWWS9N4maKcrn05xATrXhIWyCc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>97</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">    this.ldapUserAccountControlComponent = ldapUserAccountControlComponent;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="63">
               <CodeLinePart PartType="Code">    this.ldapContextFactory = ldapContextFactory;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="66">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; createBasicUserAccount(LdapUserAccount currentUser, LdapUserAccount user, boolean emailEnabled) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="69">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="70">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">//add user to basic group</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", addUserAccountToBasicGroup(currentUser.getLdapContext(), user, user.getDistinguishedName()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code">result.put("groupsAddMessage", addUserAccountToGroupList(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getGroupDNList()</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">result.put("passUacSetFlag", true);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">tch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">result.put("groupAddMessage", String.format("Учетная запись %s не добавлена в доменную группу безопасности.", user.getSamAccountName()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="615">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="616">
               <CodeLinePart PartType="Code">    return groupAddMessage;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="617">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="619">
               <CodeLinePart PartType="Code">public String addUserAccountToGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="620">
               <CodeLinePart PartType="Code">    StringBuilder groupAddMessage = new StringBuilder(String.format("Добавление учетной записи %s в группы безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="621">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="622">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="642">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="639">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="640">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="641">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="642">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="643">
               <CodeLinePart PartType="Code">    groupAddMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="644">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="645">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>aef5078bf98af02e5c0ef8caccc0313e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>662</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>9192d26e324de5c133fa86f374d55346</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 662</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>0iDIsRCvN4f9kSIUv8v6e06wPzc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>40</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="662">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="662">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="662">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="662">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>9192d26e324de5c133fa86f374d55346</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>662</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>9192d26e324de5c133fa86f374d55346</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 662</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>0BmTfMcf2ldSLPNTiVCFapr5xTg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>41</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="662">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="662">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="662">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="659">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="660">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="661">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="662">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="663">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>9192d26e324de5c133fa86f374d55346</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>667</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>dd47f1d6bd07edd7b1b87f805da4c34b</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 667</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ANSQ3gdOmxAd/LIGlIogzKN1m6c=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>43</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="667">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="667">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="667">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="667">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>dd47f1d6bd07edd7b1b87f805da4c34b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>667</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>dd47f1d6bd07edd7b1b87f805da4c34b</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 667</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rMuZRkDA9x3ZFeYvlrzvJdSsVdE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>42</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="667">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="667">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="667">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="664">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="665">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="666">
               <CodeLinePart PartType="Code">        ldapContext.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="667">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="670">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>dd47f1d6bd07edd7b1b87f805da4c34b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>670</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>4ed78a4123bfe7a2aafcb987e86cbd8e</Place>
      <AdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userDn == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 670</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>Mu0UNapujSbXCkmOmGz3eXo5U3A=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>44</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="670">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="670">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="670">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="670">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4ed78a4123bfe7a2aafcb987e86cbd8e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>670</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</TrimmedRawLine>
      <Place>4ed78a4123bfe7a2aafcb987e86cbd8e</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 670</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rFHqPrmJnNkeczUVrQyKrzWINWQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>45</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="670">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="670">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="670">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="667">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="668">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="669">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="670">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s: %s", userDn, userGroupDn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="671">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>4ed78a4123bfe7a2aafcb987e86cbd8e</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 652</Entry>
      <NumberLine>675</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>ea9fc2026f27aa3dfd1691ae4da9e78d</Place>
      <AdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((userGroupDnList == "\nLog: Entry")) &amp;&amp; ((userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 675</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>wMcLpXOOHJyRu9kqba63uTisvys=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>46</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="674">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="675">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="676">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="677">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="678">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="648">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="649">
               <CodeLinePart PartType="Code">    return groupAddMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="650">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="652">
               <CodeLinePart PartType="Code">public String removeUserAccountFromGroupList(LdapContext ldapContext, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="653">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="654">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="655">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="674">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="675">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="676">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="677">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="678">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="674">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="675">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="676">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="677">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="678">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="672">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="673">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="674">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="675">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="676">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="677">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="678">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>ea9fc2026f27aa3dfd1691ae4da9e78d</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>695</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>feec6c33f65c6422c0f2e8dbd79c1fab</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 695</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>bNIF7uY/qp2hGLpEXYsodqBIYO4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>192</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="695">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>feec6c33f65c6422c0f2e8dbd79c1fab</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>695</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>feec6c33f65c6422c0f2e8dbd79c1fab</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 695</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>BxgJ0KDNHGErz/92G1SnCDQVAjA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>147</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="695">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>feec6c33f65c6422c0f2e8dbd79c1fab</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>695</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>feec6c33f65c6422c0f2e8dbd79c1fab</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 695</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>hekqxgTQvdFnMhJTkykJURjOwL0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>148</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="695">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>feec6c33f65c6422c0f2e8dbd79c1fab</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>695</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</TrimmedRawLine>
      <Place>feec6c33f65c6422c0f2e8dbd79c1fab</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == true || (null == null == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 695</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>P/b0HzVzSZE2aFSWjcxFi4iv664=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>191</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="695">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="692">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="693">
               <CodeLinePart PartType="Code">    byte[] userGroupGuid = ldapSearch.getObjectGuidByDn(userGroupDn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="694">
               <CodeLinePart PartType="Code">    if (userGroupGuid == null) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="695">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s. Group not found.", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="696">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">    } else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">        try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>feec6c33f65c6422c0f2e8dbd79c1fab</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>700</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>651e310c609da352e2c0a3fbff0643f4</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 700</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>dyUG0gcavOtQlAoS5fBIjX2lb2U=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>149</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="700">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>651e310c609da352e2c0a3fbff0643f4</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>700</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>651e310c609da352e2c0a3fbff0643f4</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 700</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>Xjl7fTx/lV/NM0cf087omNcWW2o=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>194</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="700">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>651e310c609da352e2c0a3fbff0643f4</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>700</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>651e310c609da352e2c0a3fbff0643f4</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 700</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ARC0ugLGlMQoWUzmuIk+9Dxaf+I=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>193</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="700">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>651e310c609da352e2c0a3fbff0643f4</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>700</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>651e310c609da352e2c0a3fbff0643f4</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 700</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>F0JqoOR/H1OOjnBu7TmTctKITzY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>150</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code">        logger.info(String.format("User: %s is not member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="700">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">        logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="697">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="698">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="699">
               <CodeLinePart PartType="Code">        ldapContextUserAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="700">
               <CodeLinePart PartType="Code">        </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">        groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">    } catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="703">
               <CodeLinePart PartType="Code">        logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>651e310c609da352e2c0a3fbff0643f4</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>703</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</TrimmedRawLine>
      <Place>933d4be3694a35d087177404e9589186</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 703</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>U8FsEgJyOd/wOScNJKHuQPjtfBA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>152</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, eu.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="703">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>933d4be3694a35d087177404e9589186</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>703</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</TrimmedRawLine>
      <Place>933d4be3694a35d087177404e9589186</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 703</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>iuUaYk4luHxE4xV1WUkiNTl2CTg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>151</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="703">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>933d4be3694a35d087177404e9589186</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>703</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</TrimmedRawLine>
      <Place>933d4be3694a35d087177404e9589186</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 703</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>TCPuKyKEuLmfUcc7vhhlIwlj2VA=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>196</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, eu.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="703">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>933d4be3694a35d087177404e9589186</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>703</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</TrimmedRawLine>
      <Place>933d4be3694a35d087177404e9589186</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 703</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>qmneSav0gksGfjU3s4upgDVwkd4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>195</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, eu.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="703">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="700">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="701">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="702">
               <CodeLinePart PartType="Code">} catch (NamingException eu) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="703">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with user account: %s", userDn, userGroupDn, eu.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="704">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">        InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">        ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>933d4be3694a35d087177404e9589186</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>708</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>d18cabcc4d5dcdcb1fb02672529069f7</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 708</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>6HgQIEg+ECQZvo3ThCRAHdtXDIc=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>198</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code">logger.info(String.format("User: %s is not member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d18cabcc4d5dcdcb1fb02672529069f7</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>708</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>d18cabcc4d5dcdcb1fb02672529069f7</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 708</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>5Sxhrot5om1YNkAA9VfDPceUZMQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>197</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code">logger.info(String.format("User: %s is not member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d18cabcc4d5dcdcb1fb02672529069f7</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>708</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>d18cabcc4d5dcdcb1fb02672529069f7</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 708</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>qUeSX+IYLBRFJxRX7kJxUZZoV8Q=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>153</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code">logger.info(String.format("User: %s is not member of group: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d18cabcc4d5dcdcb1fb02672529069f7</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>708</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</RawLine>
      <TrimmedRawLine>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</TrimmedRawLine>
      <Place>d18cabcc4d5dcdcb1fb02672529069f7</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 708</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>dS9ujBrY9yfQRQJszfbjR+V3S4Y=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>154</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code">logger.info(String.format("User: %s is not member of group: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="705">
               <CodeLinePart PartType="Code">InitialLdapContext ldapContextServiceAccount = ldapContextFactory.createServiceLdapContext().orElseThrow(LdapContextException::new);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="706">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.modifyAttributes(userGroupDn, mods);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="707">
               <CodeLinePart PartType="Code">ldapContextServiceAccount.close();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="708">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">tch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="711">
               <CodeLinePart PartType="Code">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>d18cabcc4d5dcdcb1fb02672529069f7</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>711</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</TrimmedRawLine>
      <Place>c0cedec2241d8a99286c064d672163fc</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 711</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>ub9UQrWzcztadUw5VbXFjs94lHU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>155</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="711">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c0cedec2241d8a99286c064d672163fc</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>711</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</TrimmedRawLine>
      <Place>c0cedec2241d8a99286c064d672163fc</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 711</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>qfj1RP277Cu+zBPe8K97HaKvqU0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>156</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, es.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="711">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c0cedec2241d8a99286c064d672163fc</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>711</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</TrimmedRawLine>
      <Place>c0cedec2241d8a99286c064d672163fc</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 711</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>BAu7qEt9Id17s78gqorwa+mESJE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>200</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">, es.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="711">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c0cedec2241d8a99286c064d672163fc</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>711</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</TrimmedRawLine>
      <Place>c0cedec2241d8a99286c064d672163fc</Place>
      <AdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((user.getDistinguishedName() == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((([B) this.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.OBJECT_GUID.toString()).get()) == null == false || (null == null == false)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 711</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>64xMcYxxRQVM2GL/ehr6jCxoRFM=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>199</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">user.getDistinguishedName()</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, List&lt;String&gt; userGroupDnList) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userDn</CodeLinePart>
               <CodeLinePart PartType="Code">, userGroupDn, es.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="711">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="708">
               <CodeLinePart PartType="Code">    logger.info(String.format("User: %s is not member of group: %s", userDn, userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="709">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;успешно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="710">
               <CodeLinePart PartType="Code">} catch (NamingException es) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="711">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error deleting user account with dn [%s] from group %s with service account: %s", userDn, userGroupDn, es.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="712">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s - &lt;b&gt;неудачно&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="713">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>c0cedec2241d8a99286c064d672163fc</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 311</Entry>
      <NumberLine>717</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>506187b8e1eb502e34ec03851c1edaaa</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((new java.util.HashMap().containsKey("distinguishedName") == true)) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 717</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>gQvP9DMeviRkZpTwu9nPoPVmoyQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>157</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="717">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="307">
               <CodeLinePart PartType="Code">    result.put("distinguishedName", newUserDistinguishedName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="308">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="309">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="311">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithGlobalOu(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="312">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="313">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="314">
               <CodeLinePart PartType="Code">    Map&lt;String, String&gt; dnMap = generateDistinguishedNameToDisableBasicUserAccountWithGlobalOu(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="322">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="319">
               <CodeLinePart PartType="Code">    setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="320">
               <CodeLinePart PartType="Code">    delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="321">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="322">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="323">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="324">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="325">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="717">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="717">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="717">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>506187b8e1eb502e34ec03851c1edaaa</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 291</Entry>
      <NumberLine>717</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</TrimmedRawLine>
      <Place>506187b8e1eb502e34ec03851c1edaaa</Place>
      <AdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) == "\nLog: Entry")) &amp;&amp; ((!java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true)) &amp;&amp; ((java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()) != null &amp;&amp; !java.util.Arrays.stream(user.getMemberOf()).collect(java.util.stream.Collectors.toList()).isEmpty() == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java : 717</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error searching group with dn = %s", userGroupDn));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>n53BNcoDCcV4qP41WdK5bsIYRXU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>201</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="717">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="287">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="288">
               <CodeLinePart PartType="Code">    return result;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="289">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="291">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Map&lt;String, Object&gt; disableLdapUserAccountWithOuFromOrganization(LdapUserAccount currentUser, LdapUserAccount user) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="292">
               <CodeLinePart PartType="Code">    currentUser.setLdapContext(ldapContextFactory.createSecureLdapContext(currentUser.getDistinguishedName(),</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="293">
               <CodeLinePart PartType="Code">            LdapPasswordChangeUtil.unquoteAndDecodePassword(currentUser.getPwd())).orElseThrow(() -&gt; new LdapServiceException("Не удалось подключиться к AD")));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="294">
               <CodeLinePart PartType="Code">    String newUserDistinguishedName = generateDistinguishedNameToDisableBasicUserAccountWithOuFromOrganization(user);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="299">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="296">
               <CodeLinePart PartType="Code">Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="297">
               <CodeLinePart PartType="Code">setAccountUserAccountControl(currentUser.getLdapContext(), user.getDistinguishedName(), disabledUserAccountControl);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code"> = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), userGroupDnToDelete));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="298">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="299">
               <CodeLinePart PartType="Code">List&lt;String&gt; userGroupDnToDelete = Arrays.stream(user.getMemberOf()).collect(Collectors.toList());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="300">
               <CodeLinePart PartType="Code">if (!userGroupDnToDelete.isEmpty())</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="301">
               <CodeLinePart PartType="Code">    result.put("groupRemoveMessage", removeUserAccountFromGroupListWithUserAndServiceAccounts(currentUser.getLdapContext(), user.getDistinguishedName(), </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnToDelete</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="302">
               <CodeLinePart PartType="Code">delay();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="303">
               <CodeLinePart PartType="Code">Map&lt;String, String&gt; modifiedAttributes = new HashMap&lt;&gt;();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="304">
               <CodeLinePart PartType="Code">modifiedAttributes.put(LdifAttribute.INFO.toString(), "Учетная запись заблокирована (полная блокировка) через портал ЕКП " + LocalDateTime.now() + " под пользователем " + currentUser.getSamAccountName());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="681">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="682">
               <CodeLinePart PartType="Code">    return groupRemoveMessage.toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="683">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="685">
               <CodeLinePart PartType="Code">private String removeUserAccountFromGroupListWithUserAndServiceAccounts(LdapContext ldapContextUserAccount, String userDn, List&lt;String&gt; </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDnList</CodeLinePart>
               <CodeLinePart PartType="Code">) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="686">
               <CodeLinePart PartType="Code">    StringBuilder groupRemoveMessage = new StringBuilder(String.format("Удаление учетной записи %s из групп безопасности:&lt;br&gt;", userDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="687">
               <CodeLinePart PartType="Code">    if (userGroupDnList != null &amp;&amp; !userGroupDnList.isEmpty()) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="688">
               <CodeLinePart PartType="Code">        ModificationItem[] mods = new ModificationItem[1];</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="1">
               <CodeLinePart PartType="Code">package ru.mosreg.ldap.core;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="3">
               <CodeLinePart PartType="Code">import com.google.common.base.Strings;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="4">
               <CodeLinePart PartType="Code">import org.slf4j.Logger;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="717">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error searching group with dn = %s", </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userGroupDn</CodeLinePart>
               <CodeLinePart PartType="Code">));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="717">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapModificationComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="714">
               <CodeLinePart PartType="Code">        }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="715">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="716">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="717">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error searching group with dn = %s", userGroupDn));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="718">
               <CodeLinePart PartType="Code">    groupRemoveMessage.append(String.format("&lt;li&gt;группа %s &lt;b&gt;не найдена&lt;/b&gt;&lt;/li&gt;", userGroupDn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="719">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="720">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>506187b8e1eb502e34ec03851c1edaaa</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 329</Entry>
      <NumberLine>338</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</TrimmedRawLine>
      <Place>fcd67e99d31ad78dad219c7558df0b24</Place>
      <AdditionalConditions>((samAccountName == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((samAccountName == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 338</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>HxGme2H18kJJ/sspfZHNXaTewSQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>270</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="328">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="329">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public LdapUserAccount getUserAccount(String samAccountName) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="330">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="331">
               <CodeLinePart PartType="Code">   String searchFilter = createSamAccountNameFilter(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="332">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="328">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="329">
               <CodeLinePart PartType="Code">ublic LdapUserAccount getUserAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="330">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="331">
               <CodeLinePart PartType="Code">   String searchFilter = createSamAccountNameFilter(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="332">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error getting user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code"> %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="338">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fcd67e99d31ad78dad219c7558df0b24</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 367</Entry>
      <NumberLine>376</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</TrimmedRawLine>
      <Place>f40f4174ebe339e1b7e2eb8420fc37f4</Place>
      <AdditionalConditions>((dn == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((dn == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 376</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>8DbOE5CE2CTsBH4vfay7n9rmW0M=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>274</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="376">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с dn %s", dn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="378">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public LdapUserAccount getUserAccountByDn(String dn) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">   String searchFilter = createDnFilter(dn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="364">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="365">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="366">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="367">
               <CodeLinePart PartType="Code">ublic LdapUserAccount getUserAccountByDn(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">dn</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="368">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="369">
               <CodeLinePart PartType="Code">   String searchFilter = createDnFilter(dn);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="370">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="376">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error getting user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">dn</CodeLinePart>
               <CodeLinePart PartType="Code"> %s from ad: %s", dn, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с dn %s", dn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="378">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="376">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с dn %s", dn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="378">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="373">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="374">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="375">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="376">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error getting user with dn %s from ad: %s", dn, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="377">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с dn %s", dn));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="378">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="379">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>f40f4174ebe339e1b7e2eb8420fc37f4</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 416</Entry>
      <NumberLine>427</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</TrimmedRawLine>
      <Place>83d61578f9be35df3b764c7064eb7864</Place>
      <AdditionalConditions>((samAccountName == "\nLog: Entry")) &amp;&amp; ((searchResultAttributes_121.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.NTSD.toString()) != null == false)) &amp;&amp; ((null != null == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((samAccountName == "\nLog: Entry")) &amp;&amp; ((searchResultAttributes_121.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.NTSD.toString()) != null == false)) &amp;&amp; ((null != null == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 427</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>x8Q844rnMsc9FnKvUE/IathwFQg=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>267</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="427">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="413">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="414">
               <CodeLinePart PartType="Code">* @throws NamingException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="415">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="416">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public SDDL getNTSecurityDescriptor(String samAccountName) throws LdapServiceException, NamingException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="417">
               <CodeLinePart PartType="Code">   byte[] decodedBytes;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="418">
               <CodeLinePart PartType="Code">   String searchFilter = createAndFilter(userSearchFilter, createSamAccountNameFilter(samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="419">
               <CodeLinePart PartType="Code">   Control[] adctrls = new Control[]{new SDFlagsControl(0x00000004)};</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="413">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="414">
               <CodeLinePart PartType="Code">* @throws NamingException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="415">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="416">
               <CodeLinePart PartType="Code">ublic SDDL getNTSecurityDescriptor(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException, NamingException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="417">
               <CodeLinePart PartType="Code">   byte[] decodedBytes;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="418">
               <CodeLinePart PartType="Code">   String searchFilter = createAndFilter(userSearchFilter, createSamAccountNameFilter(samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="419">
               <CodeLinePart PartType="Code">   Control[] adctrls = new Control[]{new SDFlagsControl(0x00000004)};</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="427">
               <CodeLinePart PartType="Code">    logger.error(String.format("Can't get nTSecurityDescriptor for user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="427">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="427">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>83d61578f9be35df3b764c7064eb7864</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\SmsSender.java : 150</Entry>
      <NumberLine>207</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error("Unsupported encoding exception during request formation and send operation on cmd: " + cmd + " with arg: " + arg);</RawLine>
      <TrimmedRawLine>logger.error("Unsupported encoding exception during request formation and send operation on cmd: " + cmd + " with arg: " + arg);</TrimmedRawLine>
      <Place>6a43878ea83d38b6d5730675d36180af</Place>
      <AdditionalConditions>((java.net.URLEncoder.encode(phone, SMSC_CHARSET) == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((java.net.URLEncoder.encode(phone, SMSC_CHARSET) == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\SmsSender.java : 207</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error("Unsupported encoding exception during request formation and send operation on cmd: " + cmd + " with arg: " + arg);</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>NwPig1+mn+TUDP+qV/IUvtDgaOE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\SmsSender.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>687</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">JsonElement m;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">Gson gson = new Gson();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="154">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    m = smscSendCmd("status", "phone=" + URLEncoder.encode(phone, SMSC_CHARSET) + "&amp;id=" + id + "&amp;all=" + all);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">    return Optional.of(gson.fromJson(m, SmsObject.class));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">} catch (UnsupportedEncodingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">    logger.error("Error sending sms", e);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="146">
               <CodeLinePart PartType="Code">*              (&lt;время отправки&gt;, &lt;номер телефона&gt;, &lt;стоимость&gt;, &lt;sender id&gt;, &lt;название статуса&gt;, &lt;текст сообщения&gt;)</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="147">
               <CodeLinePart PartType="Code">* @return SmsObject - объект, описывающий найденное сообщение</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="148">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="150">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Optional&lt;SmsObject&gt; getStatus(int id, String phone, int all) throws LdapSmsException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">   JsonElement m;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">   Gson gson = new Gson();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">   try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">JsonElement m;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">Gson gson = new Gson();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="154">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataEntryPoint">    m = smscSendCmd("status", "phone=" + URLEncoder.encode(phone, SMSC_CHARSET) + "&amp;id=" + id + "&amp;all=" + all);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">    return Optional.of(gson.fromJson(m, SmsObject.class));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">} catch (UnsupportedEncodingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">    logger.error("Error sending sms", e);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="151">
               <CodeLinePart PartType="Code">JsonElement m;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="152">
               <CodeLinePart PartType="Code">Gson gson = new Gson();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="153">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="154">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    m = smscSendCmd("status", "phone=" + URLEncoder.encode(phone, SMSC_CHARSET) + "&amp;id=" + id + "&amp;all=" + all);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="155">
               <CodeLinePart PartType="Code">    return Optional.of(gson.fromJson(m, SmsObject.class));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="156">
               <CodeLinePart PartType="Code">} catch (UnsupportedEncodingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="157">
               <CodeLinePart PartType="Code">    logger.error("Error sending sms", e);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="186">
               <CodeLinePart PartType="Code">* @param cmd - требуемая команда</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="187">
               <CodeLinePart PartType="Code">* @param arg - дополнительные параметры</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="188">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="190">
               <CodeLinePart PartType="Code">rivate JsonElement smscSendCmd(String cmd, String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">arg</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapSmsException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="191">
               <CodeLinePart PartType="Code">   JsonElement ret = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="192">
               <CodeLinePart PartType="Code">   try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="193">
               <CodeLinePart PartType="Code">       final String _url = (SMSC_HTTPS ? "https" : "http") + "://smsc.ru/sys/" + cmd + ".php?login=" + URLEncoder.encode(SMSC_LOGIN, SMSC_CHARSET)</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">        if (ret != null) return ret;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="205">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="206">
               <CodeLinePart PartType="Code">} catch (UnsupportedEncodingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="207">
               <CodeLinePart PartType="Code">    logger.error("Unsupported encoding exception during request formation and send operation on cmd: " + cmd + " with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">arg</CodeLinePart>
               <CodeLinePart PartType="Code">: " + arg);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="208">
               <CodeLinePart PartType="Code">    throw new LdapSmsException(SmsServiceError.INVALID_CHARSET);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="209">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="210">
               <CodeLinePart PartType="Code">return null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\SmsSender.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\SmsSender.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="204">
               <CodeLinePart PartType="Code">        if (ret != null) return ret;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="205">
               <CodeLinePart PartType="Code">    }</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="206">
               <CodeLinePart PartType="Code">} catch (UnsupportedEncodingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="207">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error("Unsupported encoding exception during request formation and send operation on cmd: " + cmd + " with arg: " + arg);</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="208">
               <CodeLinePart PartType="Code">    throw new LdapSmsException(SmsServiceError.INVALID_CHARSET);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="209">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="210">
               <CodeLinePart PartType="Code">return null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>6a43878ea83d38b6d5730675d36180af</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java : 230</Entry>
      <NumberLine>427</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</TrimmedRawLine>
      <Place>83d61578f9be35df3b764c7064eb7864</Place>
      <AdditionalConditions>((samAccountName == "\nLog: Entry")) &amp;&amp; ((searchResultAttributes_121.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.NTSD.toString()) != null == false)) &amp;&amp; ((null != null == true))</AdditionalConditions>
      <TrimmedAdditionalConditions>((samAccountName == "\nLog: Entry")) &amp;&amp; ((searchResultAttributes_121.get(ru.mosreg.ldap.core.domain.ldap.LdifAttribute.NTSD.toString()) != null == false)) &amp;&amp; ((null != null == true))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 427</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>fRwusoKKtotk5IUHbPnRzbiENvI=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>695</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="427">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserAccountControlComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="226">
               <CodeLinePart PartType="Code">public boolean isEncryptedTextPasswordAllowed(String status) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="227">
               <CodeLinePart PartType="Code">    return ((Integer.parseInt(status) &amp; ENCRYPTED_TEXT_PASSWORD_ALLOWED) == ENCRYPTED_TEXT_PASSWORD_ALLOWED);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="228">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="230">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public boolean isUserCannotChangePassword(String samAccountName) throws LdapServiceException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="231">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="232">
               <CodeLinePart PartType="Code">        SDDL securityDescriptor = ldapSearch.getNTSecurityDescriptor(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="233">
               <CodeLinePart PartType="Code">        return (SDDLHelper.isUserCannotChangePassword(securityDescriptor));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserAccountControlComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="226">
               <CodeLinePart PartType="Code">public boolean isEncryptedTextPasswordAllowed(String status) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="227">
               <CodeLinePart PartType="Code">    return ((Integer.parseInt(status) &amp; ENCRYPTED_TEXT_PASSWORD_ALLOWED) == ENCRYPTED_TEXT_PASSWORD_ALLOWED);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="228">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="230">
               <CodeLinePart PartType="Code">public boolean isUserCannotChangePassword(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="231">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="232">
               <CodeLinePart PartType="Code">        SDDL securityDescriptor = ldapSearch.getNTSecurityDescriptor(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="233">
               <CodeLinePart PartType="Code">        return (SDDLHelper.isUserCannotChangePassword(securityDescriptor));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserAccountControlComponent.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="228">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="230">
               <CodeLinePart PartType="Code">public boolean isUserCannotChangePassword(String samAccountName) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="231">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="232">
               <CodeLinePart PartType="Code">        SDDL securityDescriptor = ldapSearch.getNTSecurityDescriptor(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="233">
               <CodeLinePart PartType="Code">        return (SDDLHelper.isUserCannotChangePassword(securityDescriptor));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="234">
               <CodeLinePart PartType="Code">    } catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="235">
               <CodeLinePart PartType="Code">        logger.error(String.format("Naming exception while getting password change politics: [%s]", e.getMessage()));</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="413">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="414">
               <CodeLinePart PartType="Code">* @throws NamingException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="415">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="416">
               <CodeLinePart PartType="Code">ublic SDDL getNTSecurityDescriptor(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException, NamingException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="417">
               <CodeLinePart PartType="Code">   byte[] decodedBytes;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="418">
               <CodeLinePart PartType="Code">   String searchFilter = createAndFilter(userSearchFilter, createSamAccountNameFilter(samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="419">
               <CodeLinePart PartType="Code">   Control[] adctrls = new Control[]{new SDFlagsControl(0x00000004)};</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="427">
               <CodeLinePart PartType="Code">    logger.error(String.format("Can't get nTSecurityDescriptor for user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="427">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="424">
               <CodeLinePart PartType="Code">    decodedBytes = (byte[]) ntsdAttr.get();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="425">
               <CodeLinePart PartType="Code">    return new SDDL(decodedBytes);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="426">
               <CodeLinePart PartType="Code">} else {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="427">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Can't get nTSecurityDescriptor for user with samAccountName: %s", samAccountName));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="428">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить nTSecurityDescriptor для учетной записи с логином: %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="429">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="430">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>83d61578f9be35df3b764c7064eb7864</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java : 35</Entry>
      <NumberLine>338</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</TrimmedRawLine>
      <Place>fcd67e99d31ad78dad219c7558df0b24</Place>
      <AdditionalConditions>((authentication == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((authentication == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 338</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>HRi0nKOHxsyjuI3RpKOd0LmjNIE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>697</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">    super.setPasswordEncoder(passwordEncoder);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="35">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Authentication authenticate(Authentication authentication) throws AuthenticationException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="36">
               <CodeLinePart PartType="Code">    String userName = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="37">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="38">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">    super.setPasswordEncoder(passwordEncoder);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="35">
               <CodeLinePart PartType="Code">public Authentication authenticate(Authentication </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">authentication</CodeLinePart>
               <CodeLinePart PartType="Code">) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="36">
               <CodeLinePart PartType="Code">    String userName = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="37">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="38">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">public Authentication authenticate(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="36">
               <CodeLinePart PartType="Code">    String userName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">authentication</CodeLinePart>
               <CodeLinePart PartType="Code">.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="37">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="38">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="39">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">public Authentication authenticate(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="36">
               <CodeLinePart PartType="Code">    String userName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">authentication.getName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="37">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="38">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="39">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="34">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="35">
               <CodeLinePart PartType="Code">public Authentication authenticate(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="36">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userName</CodeLinePart>
               <CodeLinePart PartType="Code"> = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="37">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="38">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="39">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="46">
               <CodeLinePart PartType="Code">Optional&lt;InitialLdapContext&gt; ldapContext;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="47">
               <CodeLinePart PartType="Code">LdapUserAccount ldapUserAccount;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="48">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="49">
               <CodeLinePart PartType="Code">    ldapUserAccount = ldapService.getLdapSearch().getUserAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="50">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="51">
               <CodeLinePart PartType="Code">    throw new LdapAuthenticationException("Не удалось получить учетную запись");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="52">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="328">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="329">
               <CodeLinePart PartType="Code">ublic LdapUserAccount getUserAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="330">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="331">
               <CodeLinePart PartType="Code">   String searchFilter = createSamAccountNameFilter(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="332">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error getting user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code"> %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="338">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fcd67e99d31ad78dad219c7558df0b24</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java : 64</Entry>
      <NumberLine>338</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</TrimmedRawLine>
      <Place>fcd67e99d31ad78dad219c7558df0b24</Place>
      <AdditionalConditions>((authentication == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((authentication == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 338</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>F3ZqVnZ6W7zXsA2Pp4O9PwbM+c4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>700</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">    ldapUserAccount.addRole(Role.ROLE_USER_CONNECTED);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">    return new UsernamePasswordAuthenticationToken(ldapUserAccount, password, ldapUserAccount.getRoles());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="64">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public Authentication authenticateWithoutPassword(Authentication authentication) throws AuthenticationException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">    String userName = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="60">
               <CodeLinePart PartType="Code">    ldapUserAccount.addRole(Role.ROLE_USER_CONNECTED);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">    return new UsernamePasswordAuthenticationToken(ldapUserAccount, password, ldapUserAccount.getRoles());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="64">
               <CodeLinePart PartType="Code">public Authentication authenticateWithoutPassword(Authentication </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">authentication</CodeLinePart>
               <CodeLinePart PartType="Code">) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="65">
               <CodeLinePart PartType="Code">    String userName = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">    return new UsernamePasswordAuthenticationToken(ldapUserAccount, password, ldapUserAccount.getRoles());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">public Authentication authenticateWithoutPassword(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="65">
               <CodeLinePart PartType="Code">    String userName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">authentication</CodeLinePart>
               <CodeLinePart PartType="Code">.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">    return new UsernamePasswordAuthenticationToken(ldapUserAccount, password, ldapUserAccount.getRoles());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">public Authentication authenticateWithoutPassword(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="65">
               <CodeLinePart PartType="Code">    String userName = </CodeLinePart>
               <CodeLinePart PartType="DataOperation">authentication.getName()</CodeLinePart>
               <CodeLinePart PartType="Code">;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="61">
               <CodeLinePart PartType="Code">    return new UsernamePasswordAuthenticationToken(ldapUserAccount, password, ldapUserAccount.getRoles());</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="62">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="64">
               <CodeLinePart PartType="Code">public Authentication authenticateWithoutPassword(Authentication authentication) throws AuthenticationException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="65">
               <CodeLinePart PartType="Code">    String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">userName</CodeLinePart>
               <CodeLinePart PartType="Code"> = authentication.getName();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="66">
               <CodeLinePart PartType="Code">    String password = authentication.getCredentials().toString();</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="67">
               <CodeLinePart PartType="Code">    String userDn = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="68">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapAuthenticationProvider.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapAuthenticationProvider.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="74">
               <CodeLinePart PartType="Code">    throw new LdapAuthenticationException("Пользователь с таким логином не найден");</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="75">
               <CodeLinePart PartType="Code">LdapUserAccount ldapUserAccount;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="76">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="77">
               <CodeLinePart PartType="Code">    ldapUserAccount = ldapService.getLdapSearch().getUserAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">userName</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="78">
               <CodeLinePart PartType="Code">    ldapUserAccount.setPwd(null);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="79">
               <CodeLinePart PartType="Code">} catch (LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="80">
               <CodeLinePart PartType="Code">    throw new LdapAuthenticationException("Не удалось получить учетную запись");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="328">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="329">
               <CodeLinePart PartType="Code">ublic LdapUserAccount getUserAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="330">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="331">
               <CodeLinePart PartType="Code">   String searchFilter = createSamAccountNameFilter(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="332">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error getting user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code"> %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="338">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fcd67e99d31ad78dad219c7558df0b24</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.info(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java : 26</Entry>
      <NumberLine>27</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.info(java.lang.String)</TrimmedFunction>
      <RawLine>logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</RawLine>
      <TrimmedRawLine>logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</TrimmedRawLine>
      <Place>6d5d71a0e372f10cf2ff0d073c98499b</Place>
      <AdditionalConditions>((username == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((username == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java : 27</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>RsPdNZDzqm705DEo3N6WhZ6t6zQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>702</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="27">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">        user = ldapSearch.getUserAccount(username);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="22">
               <CodeLinePart PartType="Code">    this.ldapSearch = ldapSearch;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="26">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="27">
               <CodeLinePart PartType="Code">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="22">
               <CodeLinePart PartType="Code">    this.ldapSearch = ldapSearch;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">username</CodeLinePart>
               <CodeLinePart PartType="Code">) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="27">
               <CodeLinePart PartType="Code">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="27">
               <CodeLinePart PartType="Code">    logger.info(String.format("Searching ldapUserAccount with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">username</CodeLinePart>
               <CodeLinePart PartType="Code">: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">        user = ldapSearch.getUserAccount(username);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="27">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">        user = ldapSearch.getUserAccount(username);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="27">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="30">
               <CodeLinePart PartType="Code">        user = ldapSearch.getUserAccount(username);</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>6d5d71a0e372f10cf2ff0d073c98499b</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <Vulnerability IsSuspected="False" IsSecondOrder="False" IsSuppressed="False" IsApproved="true">
      <IsPotential>true</IsPotential>
      <IsSuspected>true</IsSuspected>
      <IsSecondOrder>false</IsSecondOrder>
      <Function>org.slf4j.Logger.error(java.lang.String)</Function>
      <Entry>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java : 26</Entry>
      <NumberLine>338</NumberLine>
      <Exploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</Exploit>
      <AutocheckExploit/>
      <ModifyExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close
</ModifyExploit>
      <TrimmedExploit>GET /servlet HTTP/1.1
Host: localhost
Connection: close</TrimmedExploit>
      <TrimmedAutocheckExploit/>
      <TrimmedFunction>org.slf4j.Logger.error(java.lang.String)</TrimmedFunction>
      <RawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</RawLine>
      <TrimmedRawLine>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</TrimmedRawLine>
      <Place>fcd67e99d31ad78dad219c7558df0b24</Place>
      <AdditionalConditions>((username == "\nLog: Entry"))</AdditionalConditions>
      <TrimmedAdditionalConditions>((username == "\nLog: Entry"))</TrimmedAdditionalConditions>
      <GraphId>0</GraphId>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java : 338</SourceFile>
      <ScanMode>FromPublicProtected</ScanMode>
      <ScanModeId>1</ScanModeId>
      <VulnerableCode>logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</VulnerableCode>
      <TypeKey>Vulnerability</TypeKey>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>RWQd/aMTvAb5q0S5AAXk5xC5aXE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java</PrimaryFile>
      <Type DisplayName="Подделка записи файла журнала" Id="Log Forging" GroupId="Подделка записи файла журналаlevel-medium">Log Forging</Type>
      <Counter>704</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <DataFlow>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="BestPlaceToFix" EntryTypeDisplayValue="Лучшее место для исправления">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="BestPlaceToFix" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="BestPlaceToFix">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="EntryPoint" EntryTypeDisplayValue="Точка входа">
            <CodeLine LineType="Code" LineNumber="22">
               <CodeLinePart PartType="Code">    this.ldapSearch = ldapSearch;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="EntryPoint" LineNumber="26">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="EntryPoint">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="27">
               <CodeLinePart PartType="Code">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="DataEntryPoint" EntryTypeDisplayValue="Точка входа данных">
            <CodeLine LineType="Code" LineNumber="22">
               <CodeLinePart PartType="Code">    this.ldapSearch = ldapSearch;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="23">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="25">
               <CodeLinePart PartType="Code">@Override</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataEntryPoint" LineNumber="26">
               <CodeLinePart PartType="Code">public UserDetails loadUserByUsername(String </CodeLinePart>
               <CodeLinePart PartType="DataEntryPoint">username</CodeLinePart>
               <CodeLinePart PartType="Code">) throws UsernameNotFoundException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="27">
               <CodeLinePart PartType="Code">    logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">    try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">        LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapUserDetailsService.java" FullPath=".\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="27">
               <CodeLinePart PartType="Code">logger.info(String.format("Searching ldapUserAccount with username: [%s]", username));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="28">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="29">
               <CodeLinePart PartType="Code">    LdapUserAccount user = null;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="30">
               <CodeLinePart PartType="Code">    user = ldapSearch.getUserAccount(</CodeLinePart>
               <CodeLinePart PartType="DataOperation">username</CodeLinePart>
               <CodeLinePart PartType="Code">);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="31">
               <CodeLinePart PartType="Code">    return new SecurityUserDetails(user);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="32">
               <CodeLinePart PartType="Code">} catch (LdapAuthenticationException | LdapServiceException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="33">
               <CodeLinePart PartType="Code">    throw new UsernameNotFoundException("Пользователь с таким логином не найден");</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="326">
               <CodeLinePart PartType="Code">* @see LdapUserAccount</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="327">
               <CodeLinePart PartType="Code">* @throws LdapServiceException</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="328">
               <CodeLinePart PartType="Code">*/</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="329">
               <CodeLinePart PartType="Code">ublic LdapUserAccount getUserAccount(String </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code">) throws LdapServiceException {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="330">
               <CodeLinePart PartType="Code">   LdapUserAccount user;</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="331">
               <CodeLinePart PartType="Code">   String searchFilter = createSamAccountNameFilter(samAccountName);</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="332">
               <CodeLinePart PartType="Code">   javax.naming.directory.Attributes searchResultAttributes = search(searchFilter, searchBase, new javax.naming.ldap.Control[]{});</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code">    logger.error(String.format("Error getting user with </CodeLinePart>
               <CodeLinePart PartType="DataOperation">samAccountName</CodeLinePart>
               <CodeLinePart PartType="Code"> %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="DataOperation" EntryTypeDisplayValue="Изменение данных">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="DataOperation" LineNumber="338">
               <CodeLinePart PartType="Code"/>
               <CodeLinePart PartType="DataOperation">    logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
         <DataFlowElement FileName="...\LdapSearch.java" FullPath=".\src\main\java\ru\mosreg\ldap\core\LdapSearch.java" EntryType="VulnerableCode" EntryTypeDisplayValue="Точка выхода">
            <CodeLine LineType="Code" LineNumber="335">
               <CodeLinePart PartType="Code">try {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="336">
               <CodeLinePart PartType="Code">    user = new LdapUserAccount(new LdapAttributes(searchResultAttributes));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="337">
               <CodeLinePart PartType="Code">} catch (NamingException e) {</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="VulnerableCode" LineNumber="338">
               <CodeLinePart PartType="Code">    </CodeLinePart>
               <CodeLinePart PartType="VulnerableCode">logger.error(String.format("Error getting user with samAccountName %s from ad: %s", samAccountName, e.getMessage()));</CodeLinePart>
               <CodeLinePart PartType="Code"/>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="339">
               <CodeLinePart PartType="Code">    throw new LdapServiceException(String.format("Не удалось получить пользователя с логином %s", samAccountName));</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="340">
               <CodeLinePart PartType="Code">}</CodeLinePart>
            </CodeLine>
            <CodeLine LineType="Code" LineNumber="341">
               <CodeLinePart PartType="Code">String primaryGroupSID = this.getPrimaryGroupSID(user.getObjectSid(), user.getPrimaryGroupId());</CodeLinePart>
            </CodeLine>
         </DataFlowElement>
      </DataFlow>
      <Level DisplayName="Средний" Severity="3">level-medium</Level>
      <OWASP DisplayName="Инъекции">1</OWASP>
      <OWASPM DisplayName="Контроль содержимого клиентских приложений">7</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>117</CWE>
      <ParentItem>fcd67e99d31ad78dad219c7558df0b24</ParentItem>
      <PCIDSS DisplayName="Инъекции">6.5.1</PCIDSS>
      <Nist DisplayName="Проверка входных данных">SI-10</Nist>
  </Vulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapModificationComponent.class); : 35</MatchedCode>
      <BeginLine>35</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>35</EndLine>
      <EndColumn>92</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>tSpdfKOMnghFdDIuzDNOSjESm7o=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapModificationComponent.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>3</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapSearch.class); : 42</MatchedCode>
      <BeginLine>42</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>42</EndLine>
      <EndColumn>77</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>bfExCPq9wbeFLeteRztxXN9s8TU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\LdapSearch.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>5</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapService.class); : 15</MatchedCode>
      <BeginLine>15</BeginLine>
      <BeginColumn>20</BeginColumn>
      <EndLine>15</EndLine>
      <EndColumn>79</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\service\LdapService.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>aMQb9wGjSvtb8OVI/N3oPM3KAc4=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\service\LdapService.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>6</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(SmsSender.class); : 24</MatchedCode>
      <BeginLine>24</BeginLine>
      <BeginColumn>20</BeginColumn>
      <EndLine>24</EndLine>
      <EndColumn>77</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\SmsSender.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>PiH88Keak9zZWdbVp4aqH0S7oug=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\SmsSender.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>8</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapPasswordChangeUtil.class); : 14</MatchedCode>
      <BeginLine>14</BeginLine>
      <BeginColumn>20</BeginColumn>
      <EndLine>14</EndLine>
      <EndColumn>90</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\utils\LdapPasswordChangeUtil.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>NW0rIFfG3+Gi8wmWMPnGqPeDyjY=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\utils\LdapPasswordChangeUtil.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>9</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapUserAccountControlComponent.class); : 109</MatchedCode>
      <BeginLine>109</BeginLine>
      <BeginColumn>20</BeginColumn>
      <EndLine>109</EndLine>
      <EndColumn>99</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>C66guk/y/7JnTREoTnJA4yse2ZI=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\utils\LdapUserAccountControlComponent.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>17</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapUserDetailsService.class); : 17</MatchedCode>
      <BeginLine>17</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>17</EndLine>
      <EndColumn>89</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>CQ1J4VqgG2rNu+XUCLQV4lxvW48=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\security\LdapUserDetailsService.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>19</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LdapUI.class); : 30</MatchedCode>
      <BeginLine>30</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>30</EndLine>
      <EndColumn>73</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\LdapUI.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>36lxEZIOBvBn6EswY3l4naZPSyk=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\LdapUI.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>20</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(LoginUI.class); : 39</MatchedCode>
      <BeginLine>39</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>39</EndLine>
      <EndColumn>74</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\LoginUI.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>jiqvOTFEFLMygZALJywYxSshyTE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\LoginUI.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>21</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(EditOrganizationView.class); : 40</MatchedCode>
      <BeginLine>40</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>40</EndLine>
      <EndColumn>87</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditOrganizationView.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>grmk+oQ9CofiqIP+N3gROaX47Xs=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditOrganizationView.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>22</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(EditUserAccountView.class); : 50</MatchedCode>
      <BeginLine>50</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>50</EndLine>
      <EndColumn>86</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditUserAccountView.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>TyEHQLxZqxr/E3oDd7G74vD5JkI=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditUserAccountView.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>24</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>Logger logger = LoggerFactory.getLogger(UpdateUserView.class); : 33</MatchedCode>
      <BeginLine>33</BeginLine>
      <BeginColumn>19</BeginColumn>
      <EndLine>33</EndLine>
      <EndColumn>81</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24562</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\view\UpdateUserView.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>fHOIl4zEqkUFHAUGlYljb1axcOQ=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\view\UpdateUserView.java</PrimaryFile>
      <Type DisplayName="Логгер без модификаторов final и static" Id="24562" GroupId="Логгер без модификаторов final и staticlevel-pattern">Логгер без модификаторов final и static</Type>
      <Counter>25</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-24562</ParentItem>
      <PCIDSS DisplayName="Контролировать разрабатываемый код на наличие потенциальных уязвимостей перед передачей&#xA;готовых приложений заказчикам или переводом их в производственный режим">6.3.2</PCIDSS>
      <Nist DisplayName="Управление конфигурацией для разработчика">SA-10</Nist>
      <Nist DisplayName="Тестирование и оценка безопасности разработки">SA-11</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>http:// : 246</MatchedCode>
      <BeginLine>246</BeginLine>
      <BeginColumn>226</BeginColumn>
      <EndLine>246</EndLine>
      <EndColumn>233</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>24554</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditUserAccountView.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>5vASIAJwYXTV23TgsaTv3f+MtD0=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\ui\view\EditUserAccountView.java</PrimaryFile>
      <Type DisplayName="Отсутствие шифрования конфиденциальных данных" Id="24554" GroupId="Отсутствие шифрования конфиденциальных данныхlevel-pattern">Отсутствие шифрования конфиденциальных данных</Type>
      <Counter>23</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Разглашение потенциально важной информации">3</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>311</CWE>
      <ParentItem>pm-24554</ParentItem>
      <PCIDSS DisplayName="Использовать стойкую криптографию и безопасные протоколы, чтобы защитить критичные данные при их передаче через открытые общедоступные сети">4.1</PCIDSS>
      <Nist DisplayName="Управление аутентификатором">IA-5</Nist>
      <Nist DisplayName="Конфиденциальность и целостность передачи">SC-8</Nist>
      <Nist DisplayName="Обеспечение информационных потоков">AC-4</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>try { SSLContext sc = SSLContext.getInstance("SSL"); sc.init(null, blindTrustMan, new java.security.SecureRandom()); blindFactory = sc.getSocketFactory(); } catch (GeneralSecurityException e) { //todo: handle error? } : 24</MatchedCode>
      <BeginLine>24</BeginLine>
      <BeginColumn>9</BeginColumn>
      <EndLine>30</EndLine>
      <EndColumn>10</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>Empty Default Exception Handler</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>GvWDR9s8hFFoCV0rcuYz1OA1sTU=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\factory\BlindSSLSocketFactory.java</PrimaryFile>
      <Type DisplayName="Пустой блок обработки исключений" Id="Empty Default Exception Handler" GroupId="Пустой блок обработки исключенийlevel-pattern">Пустой блок обработки исключений</Type>
      <Counter>2</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE/>
      <ParentItem>pm-Empty Default Exception Handler</ParentItem>
      <PCIDSS DisplayName="Некорректная обработка ошибок">6.5.5</PCIDSS>
      <Nist DisplayName="Обработка ошибок">SI-11</Nist>
      <Nist DisplayName="Обратная связь с аутентификатором">IA-6</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>PASSWORD = : 43</MatchedCode>
      <BeginLine>43</BeginLine>
      <BeginColumn>31</BeginColumn>
      <EndLine>43</EndLine>
      <EndColumn>41</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>158</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\domain\ldap\ntsd\SDDL.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>u26Pv/IzvA13eym3RP0J1En9QJI=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\domain\ldap\ntsd\SDDL.java</PrimaryFile>
      <Type DisplayName="Раскрытие информации через комментарии в коде" Id="158" GroupId="Раскрытие информации через комментарии в кодеlevel-pattern">Раскрытие информации через комментарии в коде</Type>
      <Counter>1</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Недостатки конфигурации безопасности">6</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>615</CWE>
      <ParentItem>pm-158</ParentItem>
      <PCIDSS DisplayName="Удалить все тестовые данные, в т. ч. учетные записи, из системы перед переводом ее в производственный режим">6.4.4</PCIDSS>
      <Nist DisplayName="Управление учетной записью">AC-2</Nist>
      <Nist DisplayName="Управление аутентификатором">IA-5</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>String charCategory = charCategories.get(random.nextInt(charCategories.size())); : 91</MatchedCode>
      <BeginLine>91</BeginLine>
      <BeginColumn>0</BeginColumn>
      <EndLine>91</EndLine>
      <EndColumn>0</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>122</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\PasswordGenerator.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>rpdUjtJ/qbm/pDinIbN7cm3l4SE=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\PasswordGenerator.java</PrimaryFile>
      <Type DisplayName="Статический генератор случайных чисел" Id="122" GroupId="Статический генератор случайных чиселlevel-pattern">Статический генератор случайных чисел</Type>
      <Counter>80</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Разглашение потенциально важной информации">3</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>330</CWE>
      <ParentItem>1ad747a9273a9c78d88e875ea517ef66</ParentItem>
      <PCIDSS DisplayName="Небезопасное криптографическое хранилище">6.5.3</PCIDSS>
      <Nist DisplayName="Защита хранимой информации">SC-28</Nist>
  </PMVulnerability>
  <PMVulnerability IsSuppressed="False" IsApproved="true">
      <MatchedCode>int position = random.nextInt(charCategory.length()); : 92</MatchedCode>
      <BeginLine>92</BeginLine>
      <BeginColumn>0</BeginColumn>
      <EndLine>92</EndLine>
      <EndColumn>0</EndColumn>
      <PatternId>0</PatternId>
      <PatternKey>122</PatternKey>
      <SourceFile>.\src\main\java\ru\mosreg\ldap\core\PasswordGenerator.java</SourceFile>
      <VulnerableCode/>
      <BinaryTitle/>
      <BinaryDescription/>
      <BinaryLevel/>
      <TypeKey>PotentialVulnerability</TypeKey>
      <IsSuspected>false</IsSuspected>
      <GroupType>2</GroupType>
      <IsSuppressed>false</IsSuppressed>
      <IsNew>false</IsNew>
      <Id>PKq8u5sz7BP77Rj6T07cHLXcxss=</Id>
      <PrimaryFile>.\src\main\java\ru\mosreg\ldap\core\PasswordGenerator.java</PrimaryFile>
      <Type DisplayName="Статический генератор случайных чисел" Id="122" GroupId="Статический генератор случайных чиселlevel-pattern">Статический генератор случайных чисел</Type>
      <Counter>81</Counter>
      <ApprovalState>1</ApprovalState>
      <ApprovalStateId>1</ApprovalStateId>
      <IsFavorite>false</IsFavorite>
      <InspectionResultId>0</InspectionResultId>
      <Vuln/>
      <CommonData/>
      <Level DisplayName="Потенциальный" Severity="1">level-pattern</Level>
      <OWASP DisplayName="Разглашение потенциально важной информации">3</OWASP>
      <OWASPM DisplayName="Другое">999</OWASPM>
      <SANS DisplayName="Другое">999</SANS>
      <CWE>330</CWE>
      <ParentItem>0a8974891b401e6e6db40e444c52173e</ParentItem>
      <PCIDSS DisplayName="Небезопасное криптографическое хранилище">6.5.3</PCIDSS>
      <Nist DisplayName="Защита хранимой информации">SC-28</Nist>
  </PMVulnerability>
</report>