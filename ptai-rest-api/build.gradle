plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = "${rootGroup}.ptai-rest-api"

dependencies {
    // swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
    swaggerCodegen 'org.openapitools:openapi-generator-cli:5.1.1'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    api 'com.squareup.okhttp3:okhttp:4.2.2'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    api 'com.google.code.gson:gson:2.8.6'

    // Need this as generated code uses annotations like @Nullable etc.
    // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Used inside generated code
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // Used inside generated code
    // https://mvnrepository.com/artifact/io.swagger/swagger-annotations
    implementation 'io.swagger:swagger-annotations:1.6.2'

    // Used inside generated code
    // https://mvnrepository.com/artifact/io.gsonfire/gson-fire
    implementation 'io.gsonfire:gson-fire:1.8.5'

    // Need this as generated code uses annotations like @Nullable etc.
    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Need this to write tests that use data stored in 7zip-packed resource files
    // like issues model, scan settings etc.
    // Make test-tools fixtures available to descendants
    testFixturesApi(testFixtures(project(":ptai-test-tools")))
    testImplementation(testFixtures(project(":ptai-test-tools")))
    // testFixturesImplementation(testFixtures(project(":ptai-test-tools")))
}

jar {
    // See https://www.jenkins.io/blog/2018/01/13/jep-200/
    manifest {
        attributes 'Jenkins-ClassFilter-Whitelisted': 'true'
    }
}

swaggerSources {
    auth {
        inputFile = file('src/main/resources/api/v36/auth.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.auth.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.auth.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    filesstore {
        inputFile = file('src/main/resources/api/v36/filesstore.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.filesstore.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.filesstore.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    gateway {
        inputFile = file('src/main/resources/api/v36/gateway.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.gateway.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.gateway.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    projectmanagement {
        inputFile = file('src/main/resources/api/v36/projectmanagement.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.projectmanagement.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.projectmanagement.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    scanscheduler {
        inputFile = file('src/main/resources/api/v36/scanscheduler.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.scanscheduler.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.scanscheduler.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    systemmanagement {
        inputFile = file('src/main/resources/api/v36/systemmanagement.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.systemmanagement.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.systemmanagement.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }

    updateserver {
        inputFile = file('src/main/resources/api/v36/updateserver.yml')
        code {
            language = 'java'
            library = 'okhttp-gson'
            additionalProperties = [
                    'modelPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.updateserver.model',
                    'apiPackage': 'com.ptsecurity.appsec.ai.ee.server.v36.updateserver.api',
                    'dateLibrary': 'java8',
                    'hideGenerationTimestamp': 'true'
            ]
        }
    }
}

compileJava.dependsOn \
 swaggerSources.auth.code, \
 swaggerSources.filesstore.code, \
 swaggerSources.gateway.code, \
 swaggerSources.projectmanagement.code, \
 swaggerSources.scanscheduler.code, \
 swaggerSources.systemmanagement.code, \
 swaggerSources.updateserver.code

sourceSets.main.java.srcDirs \
 "${swaggerSources.auth.code.outputDir}/src/main/java", \
 "${swaggerSources.filesstore.code.outputDir}/src/main/java", \
 "${swaggerSources.gateway.code.outputDir}/src/main/java", \
 "${swaggerSources.projectmanagement.code.outputDir}/src/main/java", \
 "${swaggerSources.scanscheduler.code.outputDir}/src/main/java", \
 "${swaggerSources.systemmanagement.code.outputDir}/src/main/java", \
 "${swaggerSources.updateserver.code.outputDir}/src/main/java"
